{"version":3,"sources":["webpack:///adaptivecards.min.js","webpack:///webpack/bootstrap a94cffa130eae35c37ab","webpack:///./src/enums.ts","webpack:///./src/utils.ts","webpack:///./src/host-config.ts","webpack:///./src/adaptivecards.ts","webpack:///./src/card-elements.ts","webpack:///./src/text-formatters.ts","webpack:///./src/adaptive-card-json-to-csharp.ts"],"names":["AdaptiveCards","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","Size","SizeUnit","TextSize","Spacing","TextWeight","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","BackgroundImageMode","ActionIconPlacement","InputTextStyle","ContainerStyle","Default","Emphasis","ValidationError","ContainerFitStatus","getValueOrDefault","obj","defaultValue","isNullOrEmpty","undefined","appendChild","node","child","setProperty","target","propertyName","propertyValue","setEnumProperty","enumType","getEnumValueOrDefault","targetEnum","key","parseInt","toLowerCase","parseHostConfigEnum","renderSeparation","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","Enums","Horizontal","style","marginTop","paddingTop","borderTop","stringToCssColor","lineColor","height","marginLeft","paddingLeft","borderLeft","width","overflow","color","regEx","matches","exec","a","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","findBreakableIndices","lo","hi","length","bestBreakIdx","mid","Math","floor","findNextCharacter","html","results","push","currIdx","getFitStatus","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","UUID","generate","d0","random","d1","d2","d3","lut","initialize","toString","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","this","_isProcessed","_original","_processed","substituteInputValues","inputs","contentType","matchedInput","id","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","getOriginal","set","SizeAndUnit","physicalSize","unit","parse","input","result","Weight","regExp","Pixel","Error","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Utils","TextColorDefinition","default","subtle","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","toJSON","MediaConfig","allowInlinePlayback","defaultPoster","FactTextDefinition","size","isSubtle","weight","wrap","getDefaultWeight","FactTitleDefinition","_super","_this","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","iconPlacement","LeftOfTitle","allowTitleToWrap","iconSize","sizeAndUnit","e","ContainerStyleDefinition","foregroundColors","dark","light","accent","good","warning","attention","getTextColorDefinitionOrDefault","backgroundColor","BuiltInContainerStyleDefinition","apply","arguments","ContainerStyleSet","_allStyles","customStyleArray","isArray","_i","customStyleArray_1","customStyle","styleName","keys","forEach","isBuiltIn","emphasis","customStyles","getStyleByName","HostConfig","choiceSetInputValueSeparator","supportsInteractivity","fontFamily","small","medium","large","extraLarge","padding","fontSizes","fontWeights","lighter","bolder","imageSizes","containerStyles","actions","adaptiveCard","imageSet","media","factSet","cssClassNamePrefix","String","lineHeights","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","makeCssClassName","classNames","__export","utils_1","adaptive_card_json_to_csharp_1","adaptiveCardJsonToCSharp","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","generateUniqueId","createActionInstance","json","errors","actionType","AdaptiveCard","actionTypeRegistry","createInstance","raiseParseError","error","UnknownActionType","message","raiseImageLoadedEvent","image","card","getRootElement","onImageLoadedHandler","onImageLoaded","raiseAnchorClickedEvent","anchor","onAnchorClickedHandler","onAnchorClicked","raiseExecuteActionEvent","parent","onExecuteActionHandler","onExecuteAction","prepare","getAllInputs","raiseInlineCardExpandedEvent","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","raiseElementVisibilityChangedEvent","shouldUpdateLayout","rootElement","updateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","raiseParseElementEvent","onParseElementHandler","onParseElement","raiseParseActionEvent","onParseActionHandler","onParseAction","onParseError","TextFormatters","SpacingDefinition","top","right","bottom","left","PaddingDefinition","None","toSpacingDefinition","hostConfig","CardElement","_lang","_hostConfig","_internalPadding","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","horizontalAlignment","customCssSelector","internalRenderSeparator","separatorOrientation","updateRenderedElementVisibility","display","isFirstElement","hideElementDueToOverflow","visibility","showElementHiddenDueToOverflow","handleOverflow","isVisible","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","createPlaceholderElement","border","minHeight","fontSize","innerText","internalGetNonZeroPadding","processTop","processRight","processBottom","processLeft","internalPadding","isAtTheVeryTop","isAtTheVeryRight","isAtTheVeryBottom","isAtTheVeryLeft","adjustRenderedElementSize","renderedElement","flex","isDesignMode","designMode","allowCustomPadding","defaultPadding","getPadding","setPadding","useAutomaticContainerBleeding","setParent","getNonZeroPadding","getForbiddenElementTypes","getForbiddenActionTypes","speak","jsonSeparation","Deprecated","jsonHeight","getActionCount","getActionAt","index","validate","remove","CardElementContainer","removeItem","render","internalRender","classList","add","boxSizing","processChildren","indexOf","cardElement","isRendered","offsetHeight","isLastElement","isLeftMostElement","isBleeding","isRightMostElement","canContentBleed","getParentContainer","currentElement","Container","getResourceInformation","getElementById","getActionById","lang","defaultHostConfig","useAdvancedCardBottomTruncation","parentContainer","separatorElement","TextBlock","_processedText","_selectAction","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","getRenderedDomElementType","text","applyStylesTo","selectAction","onclick","execute","cancelBubble","formattedText","formatText","processMarkdown","firstElementChild","HTMLElement","textOverflow","lastElementChild","marginBottom","anchors","getElementsByTagName","preventDefault","wordWrap","whiteSpace","useAdvancedTextBlockTruncation","tabIndex","setAttribute","targetElement","Center","textAlign","Right","colorDefinition","styleDefinition","actualTextColor","Accent","Dark","Light","Good","Warning","Attention","fontWeight","Lighter","sizeString","weightString","renderSpeech","_text","Label","forElementId","htmlFor","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","_a","fact","jsonFacts","speech","Image","Auto","pixelWidth","pixelHeight","altText","parseDimension","InvalidPropertyValue","applySize","Stretch","url","alignItems","onkeypress","keyCode","justifyContent","imageElement","onload","onerror","errorElement","minWidth","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","selectActionJson","mimeType","ImageSet","_images","flexWrap","renderedImage","margin","marginRight","getItemCount","getItemAt","concat","item","itemIndex","splice","images","jsonImages","addImage","MediaSource","Media","sources","getPosterUrl","poster","processSources","_selectedSources","_selectedMediaType","source","mimeComponents","split","supportedMediaTypes","renderPoster","posterRootElement","className","position","posterUrl","posterImageElement_1","parentNode","removeChild","playButtonOuterElement","mediaPlayerElement","renderMediaPlayer","play","onPlay","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","controls","preload","type","jsonSources","serializedSources","mediaSource","Input","valueChanged","onValueChanged","PropertyCantBeNull","TextInput","Text","isMultiline","_textareaElement","placeholder","maxLength","oninput","_inputElement","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","onchange","label","useMarkdownInRadioButtonAndCheckbox","labelElement","Choice","ChoiceSetInput","choices","getUniqueCategoryName","uniqueCwtegoryName","uniqueCategoryCounter","isMultiSelect","defaultValues","_toggleInputs","checkboxInput","compoundInput","isCompact","_selectElement","option","selected","disabled","hidden","uniqueCategoryName","radioInput","choice","CollectionCantBeEmpty","choiceArray","NumberInput","_numberInputElement","min","max","DateInput","_dateInputElement","TimeInput","_timeInputElement","ActionButtonState","ActionButton","parentContainerStyle","_element","_state","Normal","onClick","_parentContainerStyle","updateCssStyle","ShowCardAction","Expanded","Subdued","isPrimary","alignment","click","Action","_actionCollection","setCollection","actionCollection","addCssClasses","iconUrl","buttonElement","hasTitle","titleElement","AboveTitle","iconElement","flexDirection","onExecute","setStatus","status","statusCard","InlineAdaptiveCard","showStatusCard","hideStatusCard","removeAction","SubmitAction","_isPrepared","_originalData","_processedData","data","OpenUrlAction","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","method","headers","header","body","jsonHeaders","httpHeader","ActionCollection","owner","_expandedAction","_renderedActionCount","_statusCard","_actionCard","items","buttons","_owner","isActionCardContainerVisible","_actionCardContainer","refreshContainer","paddingRight","layoutChanged","hideActionCard","previouslyExpandedAction","showActionCard","suppressStyle","raiseEvent","renderedCard","collapseExpandedAction","state","expandShowCardAction","actionClicked","actionButton","Popup","findActionButton","TooManyActions","InteractivityNotAllowed","ActionTypeNotAllowed","buttonStrip","ab","spacer","buttonStripContainer","addAction","expandedAction","actionIndex","clear","ActionSet","jsonOrientation","jsonActions","BackgroundImage","mode","verticalAlignment","Top","backgroundImage","Repeat","RepeatHorizontally","RepeatVertically","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","_items","_renderedItems","_style","verticalContentAlignment","isElementAllowed","forbiddenElementTypes","isInteractive","insertItemAt","isStandalone","getItemsCollectionPropertyName","isLastElementBleeding","applyPadding","physicalPadding","paddingBottom","hasBackground","physicalMargin","useAutoPadding","effectivePadding","effectiveMargin","assign","defaultStyle","placeholderElement","boundary","handleElement","elt","maxHeight_1","hasExplicitStyle","elements","jsonBackgroundImage","elementType","elementTypeRegistry","addItem","UnknownElementType","insertItemBefore","insertBefore","insertItemAfter","insertAfter","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","ColumnSet","_columns","totalWeight","column","renderedColumnCount","_b","_c","computedWeight","renderedColumn","columns","getCount","getColumnAt","jsonColumns","addColumn","weightedColumns","stretchedColumns","Hint","Version","major","minor","_isValid","_major","_minor","versionString","_versionString","ContainerWithActions","renderedActions","renderedActionCount","TypeRegistry","reset","findTypeRegistration","typeName","registerType","registrationInfo","unregisterType","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","version","isVersionSupported","bypassVersionCheck","currentVersion","fallbackText","MissingCardType","isValid","UnsupportedCardVersion","langId","window","removeAttribute","formatters","DateFormatter","TimeFormatter","format","AbstractTextFormatter","regularExpression","_regularExpression","internalFormat","date","Date","toLocaleDateString","day","weekday","month","year","toLocaleTimeString","hour","minute","typed","__assign","t","__rest","getOwnPropertySymbols","capitalize","charAt","toUpperCase","enumeration","lineSeparator","typeNameToClassName","assignClass","untyped","types","TypedElement","spec","primitive","rest","entries","filter","map","indent","dictionary","join","v","list","convert","isRequired","ActionBase","actionContext","correlationId","originator","hideOriginalBody","enableBodyToggling","rtl","expectedActors","messageCardContext","resources","minVersion","theme","autoInvokeAction","autoInvokeOptions","requiredHostCapabilities","requires","ActionContext","actionButtonId","MessageCardContext","messageCardSource","oamAppName","messageCardStampingSource","isRefreshCard","isInsightShown","isBodyHidden","insightProviderRendered","stampingCorrelationVector","transactionContext","SwiftAutoInvokeOptions","showCardOnFailure","DisplayAppointmentFormAction","ItemId","DisplayMessageFormAction","hideCardOnInvoke","InvokeAddInCommandAction","AddInId","DesktopCommandId","InitializationContext","ToggleVisibilityAction","targetElements","TransactionAction","isSelected","ChoiceSet"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["var AdaptiveCards =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Size;\r\n(function (Size) {\r\n    Size[Size[\"Auto\"] = 0] = \"Auto\";\r\n    Size[Size[\"Stretch\"] = 1] = \"Stretch\";\r\n    Size[Size[\"Small\"] = 2] = \"Small\";\r\n    Size[Size[\"Medium\"] = 3] = \"Medium\";\r\n    Size[Size[\"Large\"] = 4] = \"Large\";\r\n})(Size = exports.Size || (exports.Size = {}));\r\nvar SizeUnit;\r\n(function (SizeUnit) {\r\n    SizeUnit[SizeUnit[\"Weight\"] = 0] = \"Weight\";\r\n    SizeUnit[SizeUnit[\"Pixel\"] = 1] = \"Pixel\";\r\n})(SizeUnit = exports.SizeUnit || (exports.SizeUnit = {}));\r\nvar TextSize;\r\n(function (TextSize) {\r\n    TextSize[TextSize[\"Small\"] = 0] = \"Small\";\r\n    TextSize[TextSize[\"Default\"] = 1] = \"Default\";\r\n    TextSize[TextSize[\"Medium\"] = 2] = \"Medium\";\r\n    TextSize[TextSize[\"Large\"] = 3] = \"Large\";\r\n    TextSize[TextSize[\"ExtraLarge\"] = 4] = \"ExtraLarge\";\r\n})(TextSize = exports.TextSize || (exports.TextSize = {}));\r\nvar Spacing;\r\n(function (Spacing) {\r\n    Spacing[Spacing[\"None\"] = 0] = \"None\";\r\n    Spacing[Spacing[\"Small\"] = 1] = \"Small\";\r\n    Spacing[Spacing[\"Default\"] = 2] = \"Default\";\r\n    Spacing[Spacing[\"Medium\"] = 3] = \"Medium\";\r\n    Spacing[Spacing[\"Large\"] = 4] = \"Large\";\r\n    Spacing[Spacing[\"ExtraLarge\"] = 5] = \"ExtraLarge\";\r\n    Spacing[Spacing[\"Padding\"] = 6] = \"Padding\";\r\n})(Spacing = exports.Spacing || (exports.Spacing = {}));\r\nvar TextWeight;\r\n(function (TextWeight) {\r\n    TextWeight[TextWeight[\"Lighter\"] = 0] = \"Lighter\";\r\n    TextWeight[TextWeight[\"Default\"] = 1] = \"Default\";\r\n    TextWeight[TextWeight[\"Bolder\"] = 2] = \"Bolder\";\r\n})(TextWeight = exports.TextWeight || (exports.TextWeight = {}));\r\nvar TextColor;\r\n(function (TextColor) {\r\n    TextColor[TextColor[\"Default\"] = 0] = \"Default\";\r\n    TextColor[TextColor[\"Dark\"] = 1] = \"Dark\";\r\n    TextColor[TextColor[\"Light\"] = 2] = \"Light\";\r\n    TextColor[TextColor[\"Accent\"] = 3] = \"Accent\";\r\n    TextColor[TextColor[\"Good\"] = 4] = \"Good\";\r\n    TextColor[TextColor[\"Warning\"] = 5] = \"Warning\";\r\n    TextColor[TextColor[\"Attention\"] = 6] = \"Attention\";\r\n})(TextColor = exports.TextColor || (exports.TextColor = {}));\r\nvar HorizontalAlignment;\r\n(function (HorizontalAlignment) {\r\n    HorizontalAlignment[HorizontalAlignment[\"Left\"] = 0] = \"Left\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Center\"] = 1] = \"Center\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Right\"] = 2] = \"Right\";\r\n})(HorizontalAlignment = exports.HorizontalAlignment || (exports.HorizontalAlignment = {}));\r\nvar VerticalAlignment;\r\n(function (VerticalAlignment) {\r\n    VerticalAlignment[VerticalAlignment[\"Top\"] = 0] = \"Top\";\r\n    VerticalAlignment[VerticalAlignment[\"Center\"] = 1] = \"Center\";\r\n    VerticalAlignment[VerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\r\n})(VerticalAlignment = exports.VerticalAlignment || (exports.VerticalAlignment = {}));\r\nvar ActionAlignment;\r\n(function (ActionAlignment) {\r\n    ActionAlignment[ActionAlignment[\"Left\"] = 0] = \"Left\";\r\n    ActionAlignment[ActionAlignment[\"Center\"] = 1] = \"Center\";\r\n    ActionAlignment[ActionAlignment[\"Right\"] = 2] = \"Right\";\r\n    ActionAlignment[ActionAlignment[\"Stretch\"] = 3] = \"Stretch\";\r\n})(ActionAlignment = exports.ActionAlignment || (exports.ActionAlignment = {}));\r\nvar ImageStyle;\r\n(function (ImageStyle) {\r\n    ImageStyle[ImageStyle[\"Default\"] = 0] = \"Default\";\r\n    ImageStyle[ImageStyle[\"Person\"] = 1] = \"Person\";\r\n})(ImageStyle = exports.ImageStyle || (exports.ImageStyle = {}));\r\nvar ShowCardActionMode;\r\n(function (ShowCardActionMode) {\r\n    ShowCardActionMode[ShowCardActionMode[\"Inline\"] = 0] = \"Inline\";\r\n    ShowCardActionMode[ShowCardActionMode[\"Popup\"] = 1] = \"Popup\";\r\n})(ShowCardActionMode = exports.ShowCardActionMode || (exports.ShowCardActionMode = {}));\r\nvar Orientation;\r\n(function (Orientation) {\r\n    Orientation[Orientation[\"Horizontal\"] = 0] = \"Horizontal\";\r\n    Orientation[Orientation[\"Vertical\"] = 1] = \"Vertical\";\r\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\r\nvar BackgroundImageMode;\r\n(function (BackgroundImageMode) {\r\n    BackgroundImageMode[BackgroundImageMode[\"Stretch\"] = 0] = \"Stretch\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatHorizontally\"] = 1] = \"RepeatHorizontally\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatVertically\"] = 2] = \"RepeatVertically\";\r\n    BackgroundImageMode[BackgroundImageMode[\"Repeat\"] = 3] = \"Repeat\";\r\n})(BackgroundImageMode = exports.BackgroundImageMode || (exports.BackgroundImageMode = {}));\r\nvar ActionIconPlacement;\r\n(function (ActionIconPlacement) {\r\n    ActionIconPlacement[ActionIconPlacement[\"LeftOfTitle\"] = 0] = \"LeftOfTitle\";\r\n    ActionIconPlacement[ActionIconPlacement[\"AboveTitle\"] = 1] = \"AboveTitle\";\r\n})(ActionIconPlacement = exports.ActionIconPlacement || (exports.ActionIconPlacement = {}));\r\nvar InputTextStyle;\r\n(function (InputTextStyle) {\r\n    InputTextStyle[InputTextStyle[\"Text\"] = 0] = \"Text\";\r\n    InputTextStyle[InputTextStyle[\"Tel\"] = 1] = \"Tel\";\r\n    InputTextStyle[InputTextStyle[\"Url\"] = 2] = \"Url\";\r\n    InputTextStyle[InputTextStyle[\"Email\"] = 3] = \"Email\";\r\n})(InputTextStyle = exports.InputTextStyle || (exports.InputTextStyle = {}));\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nvar ContainerStyle = /** @class */ (function () {\r\n    function ContainerStyle() {\r\n    }\r\n    ContainerStyle.Default = \"default\";\r\n    ContainerStyle.Emphasis = \"emphasis\";\r\n    return ContainerStyle;\r\n}());\r\nexports.ContainerStyle = ContainerStyle;\r\nvar ValidationError;\r\n(function (ValidationError) {\r\n    ValidationError[ValidationError[\"Hint\"] = 0] = \"Hint\";\r\n    ValidationError[ValidationError[\"ActionTypeNotAllowed\"] = 1] = \"ActionTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"CollectionCantBeEmpty\"] = 2] = \"CollectionCantBeEmpty\";\r\n    ValidationError[ValidationError[\"Deprecated\"] = 3] = \"Deprecated\";\r\n    ValidationError[ValidationError[\"ElementTypeNotAllowed\"] = 4] = \"ElementTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"InteractivityNotAllowed\"] = 5] = \"InteractivityNotAllowed\";\r\n    ValidationError[ValidationError[\"InvalidPropertyValue\"] = 6] = \"InvalidPropertyValue\";\r\n    ValidationError[ValidationError[\"MissingCardType\"] = 7] = \"MissingCardType\";\r\n    ValidationError[ValidationError[\"PropertyCantBeNull\"] = 8] = \"PropertyCantBeNull\";\r\n    ValidationError[ValidationError[\"TooManyActions\"] = 9] = \"TooManyActions\";\r\n    ValidationError[ValidationError[\"UnknownActionType\"] = 10] = \"UnknownActionType\";\r\n    ValidationError[ValidationError[\"UnknownElementType\"] = 11] = \"UnknownElementType\";\r\n    ValidationError[ValidationError[\"UnsupportedCardVersion\"] = 12] = \"UnsupportedCardVersion\";\r\n})(ValidationError = exports.ValidationError || (exports.ValidationError = {}));\r\nvar ContainerFitStatus;\r\n(function (ContainerFitStatus) {\r\n    ContainerFitStatus[ContainerFitStatus[\"FullyInContainer\"] = 0] = \"FullyInContainer\";\r\n    ContainerFitStatus[ContainerFitStatus[\"Overflowing\"] = 1] = \"Overflowing\";\r\n    ContainerFitStatus[ContainerFitStatus[\"FullyOutOfContainer\"] = 2] = \"FullyOutOfContainer\";\r\n})(ContainerFitStatus = exports.ContainerFitStatus || (exports.ContainerFitStatus = {}));\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nvar UUID = /** @class */ (function () {\r\n    function UUID() {\r\n    }\r\n    UUID.generate = function () {\r\n        var d0 = Math.random() * 0xffffffff | 0;\r\n        var d1 = Math.random() * 0xffffffff | 0;\r\n        var d2 = Math.random() * 0xffffffff | 0;\r\n        var d3 = Math.random() * 0xffffffff | 0;\r\n        return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n            UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n    };\r\n    UUID.initialize = function () {\r\n        for (var i = 0; i < 256; i++) {\r\n            UUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n        }\r\n    };\r\n    UUID.lut = [];\r\n    return UUID;\r\n}());\r\nexports.UUID = UUID;\r\nUUID.initialize();\r\nexports.ContentTypes = {\r\n    applicationJson: \"application/json\",\r\n    applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n};\r\nfunction getValueOrDefault(obj, defaultValue) {\r\n    return obj ? obj : defaultValue;\r\n}\r\nexports.getValueOrDefault = getValueOrDefault;\r\nfunction isNullOrEmpty(value) {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\nexports.isNullOrEmpty = isNullOrEmpty;\r\nfunction appendChild(node, child) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\nexports.appendChild = appendChild;\r\nfunction setProperty(target, propertyName, propertyValue, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = undefined; }\r\n    if (propertyValue && (!defaultValue || defaultValue !== propertyValue)) {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\nexports.setProperty = setProperty;\r\nfunction setEnumProperty(enumType, target, propertyName, propertyValue, defaultValue) {\r\n    if (defaultValue === undefined || defaultValue !== propertyValue) {\r\n        target[propertyName] = enumType[propertyValue];\r\n    }\r\n}\r\nexports.setEnumProperty = setEnumProperty;\r\nfunction getEnumValueOrDefault(targetEnum, name, defaultValue) {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n    for (var key in targetEnum) {\r\n        var isValueProperty = parseInt(key, 10) >= 0;\r\n        if (isValueProperty) {\r\n            var value = targetEnum[key];\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return defaultValue;\r\n}\r\nexports.getEnumValueOrDefault = getEnumValueOrDefault;\r\nfunction parseHostConfigEnum(targetEnum, value, defaultValue) {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return getValueOrDefault(value, defaultValue);\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\nexports.parseHostConfigEnum = parseHostConfigEnum;\r\nfunction renderSeparation(separationDefinition, orientation) {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        separator.style.overflow = \"hidden\";\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexports.renderSeparation = renderSeparation;\r\nfunction stringToCssColor(color) {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n    var matches = regEx.exec(color);\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\nexports.stringToCssColor = stringToCssColor;\r\nvar StringWithSubstitutions = /** @class */ (function () {\r\n    function StringWithSubstitutions() {\r\n        this._isProcessed = false;\r\n        this._original = null;\r\n        this._processed = null;\r\n    }\r\n    StringWithSubstitutions.prototype.substituteInputValues = function (inputs, contentType) {\r\n        this._processed = this._original;\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput = null;\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (matchedInput) {\r\n                var valueForReplace = \"\";\r\n                if (matchedInput.value) {\r\n                    valueForReplace = matchedInput.value;\r\n                }\r\n                if (contentType === exports.ContentTypes.applicationJson) {\r\n                    valueForReplace = JSON.stringify(valueForReplace);\r\n                    valueForReplace = valueForReplace.slice(1, -1);\r\n                }\r\n                else if (contentType === exports.ContentTypes.applicationXWwwFormUrlencoded) {\r\n                    valueForReplace = encodeURIComponent(valueForReplace);\r\n                }\r\n                this._processed = this._processed.replace(matches[0], valueForReplace);\r\n            }\r\n        }\r\n        ;\r\n        this._isProcessed = true;\r\n    };\r\n    StringWithSubstitutions.prototype.getOriginal = function () {\r\n        return this._original;\r\n    };\r\n    StringWithSubstitutions.prototype.get = function () {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    };\r\n    StringWithSubstitutions.prototype.set = function (value) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    };\r\n    return StringWithSubstitutions;\r\n}());\r\nexports.StringWithSubstitutions = StringWithSubstitutions;\r\nvar SizeAndUnit = /** @class */ (function () {\r\n    function SizeAndUnit(physicalSize, unit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n    SizeAndUnit.parse = function (input) {\r\n        var result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n        var regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        var matches = regExp.exec(input);\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        throw new Error(\"Invalid size: \" + input);\r\n    };\r\n    return SizeAndUnit;\r\n}());\r\nexports.SizeAndUnit = SizeAndUnit;\r\nfunction truncate(element, maxHeight, lineHeight) {\r\n    var fits = function () {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n    if (fits())\r\n        return;\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = function (idx) {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    };\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n    truncateAt(bestBreakIdx);\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        var idx = findNextCharacter(fullText, bestBreakIdx);\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\nexports.truncate = truncate;\r\nfunction findBreakableIndices(html) {\r\n    var results = [];\r\n    var idx = findNextCharacter(html, -1);\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n    return results;\r\n}\r\nfunction findNextCharacter(html, currIdx) {\r\n    currIdx += 1;\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>')\r\n            ;\r\n    }\r\n    return currIdx;\r\n}\r\nfunction getFitStatus(element, containerEnd) {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\nexports.getFitStatus = getFitStatus;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(1);\r\nvar TextColorDefinition = /** @class */ (function () {\r\n    function TextColorDefinition(obj) {\r\n        this.default = \"#000000\";\r\n        this.subtle = \"#666666\";\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n    return TextColorDefinition;\r\n}());\r\nexports.TextColorDefinition = TextColorDefinition;\r\nvar AdaptiveCardConfig = /** @class */ (function () {\r\n    function AdaptiveCardConfig(obj) {\r\n        this.allowCustomStyle = false;\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n    return AdaptiveCardConfig;\r\n}());\r\nexports.AdaptiveCardConfig = AdaptiveCardConfig;\r\nvar ImageSetConfig = /** @class */ (function () {\r\n    function ImageSetConfig(obj) {\r\n        this.imageSize = Enums.Size.Medium;\r\n        this.maxImageHeight = 100;\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n    ImageSetConfig.prototype.toJSON = function () {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        };\r\n    };\r\n    return ImageSetConfig;\r\n}());\r\nexports.ImageSetConfig = ImageSetConfig;\r\nvar MediaConfig = /** @class */ (function () {\r\n    function MediaConfig(obj) {\r\n        this.allowInlinePlayback = true;\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n    MediaConfig.prototype.toJSON = function () {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        };\r\n    };\r\n    return MediaConfig;\r\n}());\r\nexports.MediaConfig = MediaConfig;\r\nvar FactTextDefinition = /** @class */ (function () {\r\n    function FactTextDefinition(obj) {\r\n        this.size = Enums.TextSize.Default;\r\n        this.color = Enums.TextColor.Default;\r\n        this.isSubtle = false;\r\n        this.weight = Enums.TextWeight.Default;\r\n        this.wrap = true;\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n    ;\r\n    FactTextDefinition.prototype.getDefaultWeight = function () {\r\n        return Enums.TextWeight.Default;\r\n    };\r\n    FactTextDefinition.prototype.toJSON = function () {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        };\r\n    };\r\n    return FactTextDefinition;\r\n}());\r\nexports.FactTextDefinition = FactTextDefinition;\r\nvar FactTitleDefinition = /** @class */ (function (_super) {\r\n    __extends(FactTitleDefinition, _super);\r\n    function FactTitleDefinition(obj) {\r\n        var _this = _super.call(this, obj) || this;\r\n        _this.maxWidth = 150;\r\n        _this.weight = Enums.TextWeight.Bolder;\r\n        if (obj) {\r\n            _this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : _this.maxWidth;\r\n            _this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n        return _this;\r\n    }\r\n    FactTitleDefinition.prototype.getDefaultWeight = function () {\r\n        return Enums.TextWeight.Bolder;\r\n    };\r\n    return FactTitleDefinition;\r\n}(FactTextDefinition));\r\nexports.FactTitleDefinition = FactTitleDefinition;\r\nvar FactSetConfig = /** @class */ (function () {\r\n    function FactSetConfig(obj) {\r\n        this.title = new FactTitleDefinition();\r\n        this.value = new FactTextDefinition();\r\n        this.spacing = 10;\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n    return FactSetConfig;\r\n}());\r\nexports.FactSetConfig = FactSetConfig;\r\nvar ShowCardActionConfig = /** @class */ (function () {\r\n    function ShowCardActionConfig(obj) {\r\n        this.actionMode = Enums.ShowCardActionMode.Inline;\r\n        this.inlineTopMargin = 16;\r\n        this.style = Enums.ContainerStyle.Emphasis;\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n    ShowCardActionConfig.prototype.toJSON = function () {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        };\r\n    };\r\n    return ShowCardActionConfig;\r\n}());\r\nexports.ShowCardActionConfig = ShowCardActionConfig;\r\nvar ActionsConfig = /** @class */ (function () {\r\n    function ActionsConfig(obj) {\r\n        this.maxActions = 5;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.buttonSpacing = 20;\r\n        this.showCard = new ShowCardActionConfig();\r\n        this.preExpandSingleShowCardAction = false;\r\n        this.actionsOrientation = Enums.Orientation.Horizontal;\r\n        this.actionAlignment = Enums.ActionAlignment.Left;\r\n        this.iconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n        this.allowTitleToWrap = false;\r\n        this.iconSize = 24;\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n            try {\r\n                var sizeAndUnit = Utils.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n    ActionsConfig.prototype.toJSON = function () {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        };\r\n    };\r\n    return ActionsConfig;\r\n}());\r\nexports.ActionsConfig = ActionsConfig;\r\nvar ContainerStyleDefinition = /** @class */ (function () {\r\n    function ContainerStyleDefinition(obj) {\r\n        this.foregroundColors = {\r\n            default: new TextColorDefinition(),\r\n            dark: new TextColorDefinition(),\r\n            light: new TextColorDefinition(),\r\n            accent: new TextColorDefinition(),\r\n            good: new TextColorDefinition(),\r\n            warning: new TextColorDefinition(),\r\n            attention: new TextColorDefinition()\r\n        };\r\n        this.parse(obj);\r\n    }\r\n    ContainerStyleDefinition.prototype.getTextColorDefinitionOrDefault = function (obj, defaultValue) {\r\n        return new TextColorDefinition(obj ? obj : defaultValue);\r\n    };\r\n    ContainerStyleDefinition.prototype.parse = function (obj) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n            if (obj.foregroundColors) {\r\n                this.foregroundColors.default = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"default\"], { default: \"#333333\", subtle: \"#EE333333\" });\r\n                this.foregroundColors.dark = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"dark\"], { default: \"#000000\", subtle: \"#66000000\" });\r\n                this.foregroundColors.light = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"light\"], { default: \"#FFFFFF\", subtle: \"#33000000\" });\r\n                this.foregroundColors.accent = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"accent\"], { default: \"#2E89FC\", subtle: \"#882E89FC\" });\r\n                this.foregroundColors.good = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"good\"], { default: \"#54A254\", subtle: \"#DD54A254\" });\r\n                this.foregroundColors.warning = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"warning\"], { default: \"#E69500\", subtle: \"#DDE69500\" });\r\n                this.foregroundColors.attention = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"attention\"], { default: \"#CC3300\", subtle: \"#DDCC3300\" });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ContainerStyleDefinition.prototype, \"isBuiltIn\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerStyleDefinition;\r\n}());\r\nexports.ContainerStyleDefinition = ContainerStyleDefinition;\r\nvar BuiltInContainerStyleDefinition = /** @class */ (function (_super) {\r\n    __extends(BuiltInContainerStyleDefinition, _super);\r\n    function BuiltInContainerStyleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BuiltInContainerStyleDefinition.prototype, \"isBuiltIn\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BuiltInContainerStyleDefinition;\r\n}(ContainerStyleDefinition));\r\nvar ContainerStyleSet = /** @class */ (function () {\r\n    function ContainerStyleSet(obj) {\r\n        this._allStyles = {};\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            var customStyleArray = obj[\"customStyles\"];\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var _i = 0, customStyleArray_1 = customStyleArray; _i < customStyleArray_1.length; _i++) {\r\n                    var customStyle = customStyleArray_1[_i];\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ContainerStyleSet.prototype.toJSON = function () {\r\n        var _this = this;\r\n        var customStyleArray = [];\r\n        Object.keys(this._allStyles).forEach(function (key) {\r\n            if (!_this._allStyles[key].isBuiltIn) {\r\n                customStyleArray.push({\r\n                    name: key,\r\n                    style: _this._allStyles[key]\r\n                });\r\n            }\r\n        });\r\n        var result = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        };\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n        return result;\r\n    };\r\n    ContainerStyleSet.prototype.getStyleByName = function (name, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = null; }\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    };\r\n    Object.defineProperty(ContainerStyleSet.prototype, \"default\", {\r\n        get: function () {\r\n            return this._allStyles[Enums.ContainerStyle.Default];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContainerStyleSet.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerStyleSet;\r\n}());\r\nexports.ContainerStyleSet = ContainerStyleSet;\r\nvar HostConfig = /** @class */ (function () {\r\n    function HostConfig(obj) {\r\n        this.choiceSetInputValueSeparator = \",\";\r\n        this.supportsInteractivity = true;\r\n        this.fontFamily = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n        this.spacing = {\r\n            small: 3,\r\n            default: 8,\r\n            medium: 20,\r\n            large: 30,\r\n            extraLarge: 40,\r\n            padding: 15\r\n        };\r\n        this.separator = {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        };\r\n        this.fontSizes = {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        };\r\n        this.fontWeights = {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        };\r\n        this.imageSizes = {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        };\r\n        this.containerStyles = new ContainerStyleSet();\r\n        this.actions = new ActionsConfig();\r\n        this.adaptiveCard = new AdaptiveCardConfig();\r\n        this.imageSet = new ImageSetConfig();\r\n        this.media = new MediaConfig();\r\n        this.factSet = new FactSetConfig();\r\n        this.cssClassNamePrefix = null;\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj);\r\n            }\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            }\r\n            ;\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            };\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"]);\r\n        }\r\n    }\r\n    HostConfig.prototype.getEffectiveSpacing = function (spacing) {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    HostConfig.prototype.makeCssClassName = function () {\r\n        var classNames = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            classNames[_i] = arguments[_i];\r\n        }\r\n        var result = \"\";\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            if (i > 0) {\r\n                result += \" \";\r\n            }\r\n            if (this.cssClassNamePrefix) {\r\n                result += this.cssClassNamePrefix + \"-\";\r\n            }\r\n            result += classNames[i];\r\n        }\r\n        return result;\r\n    };\r\n    return HostConfig;\r\n}());\r\nexports.HostConfig = HostConfig;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(4);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(0));\r\n__export(__webpack_require__(2));\r\nvar utils_1 = __webpack_require__(1);\r\nexports.getEnumValueOrDefault = utils_1.getEnumValueOrDefault;\r\nvar adaptive_card_json_to_csharp_1 = __webpack_require__(7);\r\nexports.adaptiveCardJsonToCSharp = adaptive_card_json_to_csharp_1.adaptiveCardJsonToCSharp;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(1);\r\nvar HostConfig = __webpack_require__(2);\r\nvar TextFormatters = __webpack_require__(6);\r\nfunction invokeSetCollection(action, collection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\nfunction isActionAllowed(action, forbiddenActionTypes) {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction generateUniqueId() {\r\n    return \"__ac-\" + Utils.UUID.generate();\r\n}\r\nfunction createActionInstance(json, errors) {\r\n    var actionType = json[\"type\"];\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n    if (!result) {\r\n        raiseParseError({\r\n            error: Enums.ValidationError.UnknownActionType,\r\n            message: \"Unknown action type: \" + actionType\r\n        }, errors);\r\n    }\r\n    return result;\r\n}\r\nexports.createActionInstance = createActionInstance;\r\nvar SpacingDefinition = /** @class */ (function () {\r\n    function SpacingDefinition(top, right, bottom, left) {\r\n        if (top === void 0) { top = 0; }\r\n        if (right === void 0) { right = 0; }\r\n        if (bottom === void 0) { bottom = 0; }\r\n        if (left === void 0) { left = 0; }\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.right = 0;\r\n        this.bottom = 0;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n    return SpacingDefinition;\r\n}());\r\nexports.SpacingDefinition = SpacingDefinition;\r\nvar PaddingDefinition = /** @class */ (function () {\r\n    function PaddingDefinition(top, right, bottom, left) {\r\n        if (top === void 0) { top = Enums.Spacing.None; }\r\n        if (right === void 0) { right = Enums.Spacing.None; }\r\n        if (bottom === void 0) { bottom = Enums.Spacing.None; }\r\n        if (left === void 0) { left = Enums.Spacing.None; }\r\n        this.top = Enums.Spacing.None;\r\n        this.right = Enums.Spacing.None;\r\n        this.bottom = Enums.Spacing.None;\r\n        this.left = Enums.Spacing.None;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n    PaddingDefinition.prototype.toSpacingDefinition = function (hostConfig) {\r\n        return new SpacingDefinition(hostConfig.getEffectiveSpacing(this.top), hostConfig.getEffectiveSpacing(this.right), hostConfig.getEffectiveSpacing(this.bottom), hostConfig.getEffectiveSpacing(this.left));\r\n    };\r\n    return PaddingDefinition;\r\n}());\r\nexports.PaddingDefinition = PaddingDefinition;\r\nvar SizeAndUnit = /** @class */ (function () {\r\n    function SizeAndUnit(physicalSize, unit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n    SizeAndUnit.parse = function (input) {\r\n        var result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n        var regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        var matches = regExp.exec(input);\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        throw new Error(\"Invalid size: \" + input);\r\n    };\r\n    return SizeAndUnit;\r\n}());\r\nexports.SizeAndUnit = SizeAndUnit;\r\nvar CardElement = /** @class */ (function () {\r\n    function CardElement() {\r\n        this._lang = undefined;\r\n        this._hostConfig = null;\r\n        this._internalPadding = null;\r\n        this._parent = null;\r\n        this._renderedElement = null;\r\n        this._separatorElement = null;\r\n        this._isVisible = true;\r\n        this._truncatedDueToOverflow = false;\r\n        this._defaultRenderedElementDisplayMode = null;\r\n        this._padding = null;\r\n        this.horizontalAlignment = null;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.separator = false;\r\n        this.height = \"auto\";\r\n        this.customCssSelector = null;\r\n    }\r\n    CardElement.prototype.internalRenderSeparator = function () {\r\n        return Utils.renderSeparation({\r\n            spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n            lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n            lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n        }, this.separatorOrientation);\r\n    };\r\n    CardElement.prototype.updateRenderedElementVisibility = function () {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n            }\r\n        }\r\n    };\r\n    CardElement.prototype.hideElementDueToOverflow = function () {\r\n        if (this._renderedElement && this._isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this._isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    };\r\n    CardElement.prototype.showElementHiddenDueToOverflow = function () {\r\n        if (this._renderedElement && !this._isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this._isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    };\r\n    // Marked private to emulate internal access\r\n    CardElement.prototype.handleOverflow = function (maxHeight) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this._isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    };\r\n    // Marked private to emulate internal access\r\n    CardElement.prototype.resetOverflow = function () {\r\n        var sizeChanged = false;\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n        return sizeChanged;\r\n    };\r\n    CardElement.prototype.createPlaceholderElement = function () {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n        return element;\r\n    };\r\n    CardElement.prototype.internalGetNonZeroPadding = function (padding, processTop, processRight, processBottom, processLeft) {\r\n        if (processTop === void 0) { processTop = true; }\r\n        if (processRight === void 0) { processRight = true; }\r\n        if (processBottom === void 0) { processBottom = true; }\r\n        if (processLeft === void 0) { processLeft = true; }\r\n        if (processTop) {\r\n            if (padding.top == Enums.Spacing.None) {\r\n                padding.top = this.internalPadding.top;\r\n            }\r\n        }\r\n        if (processRight) {\r\n            if (padding.right == Enums.Spacing.None) {\r\n                padding.right = this.internalPadding.right;\r\n            }\r\n        }\r\n        if (processBottom) {\r\n            if (padding.bottom == Enums.Spacing.None) {\r\n                padding.bottom = this.internalPadding.bottom;\r\n            }\r\n        }\r\n        if (processLeft) {\r\n            if (padding.left == Enums.Spacing.None) {\r\n                padding.left = this.internalPadding.left;\r\n            }\r\n        }\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(padding, processTop && this.isAtTheVeryTop(), processRight && this.isAtTheVeryRight(), processBottom && this.isAtTheVeryBottom(), processLeft && this.isAtTheVeryLeft());\r\n        }\r\n    };\r\n    CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n    };\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    CardElement.prototype.truncateOverflow = function (maxHeight) {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    };\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    CardElement.prototype.undoOverflowTruncation = function () { };\r\n    CardElement.prototype.isDesignMode = function () {\r\n        var rootElement = this.getRootElement();\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"internalPadding\", {\r\n        get: function () {\r\n            if (this._padding) {\r\n                return this._padding;\r\n            }\r\n            else {\r\n                return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._internalPadding = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Horizontal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CardElement.prototype.getPadding = function () {\r\n        return this._padding;\r\n    };\r\n    CardElement.prototype.setPadding = function (value) {\r\n        this._padding = value;\r\n        if (this._padding) {\r\n            AdaptiveCard.useAutomaticContainerBleeding = false;\r\n        }\r\n    };\r\n    CardElement.prototype.toJSON = function () {\r\n        var result = {};\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n        return result;\r\n    };\r\n    CardElement.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    CardElement.prototype.getNonZeroPadding = function () {\r\n        var padding = new PaddingDefinition();\r\n        this.internalGetNonZeroPadding(padding);\r\n        return padding;\r\n    };\r\n    CardElement.prototype.getForbiddenElementTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.getForbiddenActionTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.parse = function (json, errors) {\r\n        raiseParseElementEvent(this, json, errors);\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n        var jsonSeparation = json[\"separation\"];\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n            }, errors);\r\n        }\r\n        var jsonHeight = json[\"height\"];\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    };\r\n    CardElement.prototype.getActionCount = function () {\r\n        return 0;\r\n    };\r\n    CardElement.prototype.getActionAt = function (index) {\r\n        throw new Error(\"Index out of range.\");\r\n    };\r\n    CardElement.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.remove = function () {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n        return false;\r\n    };\r\n    CardElement.prototype.render = function () {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n        return this._renderedElement;\r\n    };\r\n    CardElement.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        this.updateRenderedElementVisibility();\r\n    };\r\n    CardElement.prototype.indexOf = function (cardElement) {\r\n        return -1;\r\n    };\r\n    CardElement.prototype.isRendered = function () {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    };\r\n    CardElement.prototype.isAtTheVeryTop = function () {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    };\r\n    CardElement.prototype.isFirstElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryBottom = function () {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    };\r\n    CardElement.prototype.isLastElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryLeft = function () {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    };\r\n    CardElement.prototype.isBleeding = function () {\r\n        return false;\r\n    };\r\n    CardElement.prototype.isLeftMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryRight = function () {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    };\r\n    CardElement.prototype.isRightMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isHiddenDueToOverflow = function () {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    };\r\n    CardElement.prototype.canContentBleed = function () {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    };\r\n    CardElement.prototype.getRootElement = function () {\r\n        var rootElement = this;\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n        return rootElement;\r\n    };\r\n    CardElement.prototype.getParentContainer = function () {\r\n        var currentElement = this.parent;\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return currentElement;\r\n            }\r\n            currentElement = currentElement.parent;\r\n        }\r\n        return null;\r\n    };\r\n    CardElement.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.getResourceInformation = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.getElementById = function (id) {\r\n        return this.id === id ? this : null;\r\n    };\r\n    CardElement.prototype.getActionById = function (id) {\r\n        return null;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"lang\", {\r\n        get: function () {\r\n            if (this._lang) {\r\n                return this._lang;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.lang;\r\n                }\r\n                else {\r\n                    return undefined;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            if (value && value != \"\") {\r\n                var regEx = /^[a-z]{2,3}$/ig;\r\n                var matches = regEx.exec(value);\r\n                if (!matches) {\r\n                    throw new Error(\"Invalid language identifier: \" + value);\r\n                }\r\n            }\r\n            this._lang = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"hostConfig\", {\r\n        get: function () {\r\n            if (this._hostConfig) {\r\n                return this._hostConfig;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.hostConfig;\r\n                }\r\n                else {\r\n                    return defaultHostConfig;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._hostConfig = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"index\", {\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.parent.indexOf(this);\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isVisible\", {\r\n        get: function () {\r\n            return this._isVisible;\r\n        },\r\n        set: function (value) {\r\n            // If the element is going to be hidden, reset any changes that were due\r\n            // to overflow truncation (this ensures that if the element is later\r\n            // un-hidden it has the right content)\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n                this.undoOverflowTruncation();\r\n            }\r\n            if (this._isVisible != value) {\r\n                this._isVisible = value;\r\n                this.updateRenderedElementVisibility();\r\n                if (this._renderedElement) {\r\n                    raiseElementVisibilityChangedEvent(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"hasVisibleSeparator\", {\r\n        get: function () {\r\n            var parentContainer = this.getParentContainer();\r\n            if (parentContainer) {\r\n                return this.separatorElement && !parentContainer.isFirstElement(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"renderedElement\", {\r\n        get: function () {\r\n            return this._renderedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorElement\", {\r\n        get: function () {\r\n            return this._separatorElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CardElement;\r\n}());\r\nexports.CardElement = CardElement;\r\nvar CardElementContainer = /** @class */ (function (_super) {\r\n    __extends(CardElementContainer, _super);\r\n    function CardElementContainer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return CardElementContainer;\r\n}(CardElement));\r\nexports.CardElementContainer = CardElementContainer;\r\nvar TextBlock = /** @class */ (function (_super) {\r\n    __extends(TextBlock, _super);\r\n    function TextBlock() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._processedText = null;\r\n        _this._selectAction = null;\r\n        _this.size = Enums.TextSize.Default;\r\n        _this.weight = Enums.TextWeight.Default;\r\n        _this.color = Enums.TextColor.Default;\r\n        _this.isSubtle = false;\r\n        _this.wrap = false;\r\n        _this.useMarkdown = true;\r\n        return _this;\r\n    }\r\n    TextBlock.prototype.restoreOriginalContent = function () {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    };\r\n    TextBlock.prototype.truncateIfSupported = function (maxHeight) {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && children[0].tagName.toLowerCase() == 'p';\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : children[0];\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TextBlock.prototype.getRenderedDomElementType = function () {\r\n        return \"div\";\r\n    };\r\n    TextBlock.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            var hostConfig = this.hostConfig;\r\n            var element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n            this.applyStylesTo(element);\r\n            if (this.selectAction) {\r\n                element.onclick = function (e) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                };\r\n            }\r\n            if (!this._processedText) {\r\n                var formattedText = TextFormatters.formatText(this.lang, this.text);\r\n                this._processedText = this.useMarkdown ? AdaptiveCard.processMarkdown(formattedText) : formattedText;\r\n            }\r\n            element.innerHTML = this._processedText;\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                element.lastElementChild.style.marginBottom = \"0px\";\r\n            }\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = anchors[i];\r\n                anchor.classList.add(this.hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = function (e) {\r\n                    if (raiseAnchorClickedEvent(_this, e.target)) {\r\n                        e.preventDefault();\r\n                    }\r\n                };\r\n            }\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0;\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TextBlock.prototype.truncateOverflow = function (maxHeight) {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n        return false;\r\n    };\r\n    TextBlock.prototype.undoOverflowTruncation = function () {\r\n        this.restoreOriginalContent();\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    };\r\n    TextBlock.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n        return result;\r\n    };\r\n    TextBlock.prototype.applyStylesTo = function (targetElement) {\r\n        if (this.hostConfig.fontFamily) {\r\n            targetElement.style.fontFamily = this.hostConfig.fontFamily;\r\n        }\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = \"left\";\r\n                break;\r\n        }\r\n        var cssStyle = \"text \";\r\n        var fontSize;\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = this.hostConfig.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = this.hostConfig.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = this.hostConfig.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = this.hostConfig.fontSizes.default;\r\n                break;\r\n        }\r\n        if (this.hostConfig.lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n        }\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n        var parentContainer = this.getParentContainer();\r\n        var styleDefinition = this.hostConfig.containerStyles.getStyleByName(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default, this.hostConfig.containerStyles.default);\r\n        var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n        var colorDefinition;\r\n        switch (actualTextColor) {\r\n            case Enums.TextColor.Accent:\r\n                colorDefinition = styleDefinition.foregroundColors.accent;\r\n                break;\r\n            case Enums.TextColor.Dark:\r\n                colorDefinition = styleDefinition.foregroundColors.dark;\r\n                break;\r\n            case Enums.TextColor.Light:\r\n                colorDefinition = styleDefinition.foregroundColors.light;\r\n                break;\r\n            case Enums.TextColor.Good:\r\n                colorDefinition = styleDefinition.foregroundColors.good;\r\n                break;\r\n            case Enums.TextColor.Warning:\r\n                colorDefinition = styleDefinition.foregroundColors.warning;\r\n                break;\r\n            case Enums.TextColor.Attention:\r\n                colorDefinition = styleDefinition.foregroundColors.attention;\r\n                break;\r\n            default:\r\n                colorDefinition = styleDefinition.foregroundColors.default;\r\n                break;\r\n        }\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n        var fontWeight;\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = this.hostConfig.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = this.hostConfig.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = this.hostConfig.fontWeights.default;\r\n                break;\r\n        }\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    };\r\n    TextBlock.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.text = json[\"text\"];\r\n        var sizeString = json[\"size\"];\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            }, errors);\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n        var weightString = json[\"weight\"];\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            }, errors);\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    };\r\n    TextBlock.prototype.getJsonTypeName = function () {\r\n        return \"TextBlock\";\r\n    };\r\n    TextBlock.prototype.renderSpeech = function () {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n        return null;\r\n    };\r\n    TextBlock.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = false; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    };\r\n    Object.defineProperty(TextBlock.prototype, \"text\", {\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (value) {\r\n            if (this._text != value) {\r\n                this._text = value;\r\n                this._processedText = null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextBlock.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TextBlock;\r\n}(CardElement));\r\nexports.TextBlock = TextBlock;\r\nvar Label = /** @class */ (function (_super) {\r\n    __extends(Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Label.prototype.getRenderedDomElementType = function () {\r\n        return \"label\";\r\n    };\r\n    Label.prototype.internalRender = function () {\r\n        var renderedElement = _super.prototype.internalRender.call(this);\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n        return renderedElement;\r\n    };\r\n    return Label;\r\n}(TextBlock));\r\nvar Fact = /** @class */ (function () {\r\n    function Fact(name, value) {\r\n        if (name === void 0) { name = undefined; }\r\n        if (value === void 0) { value = undefined; }\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n    Fact.prototype.toJSON = function () {\r\n        return { title: this.name, value: this.value };\r\n    };\r\n    Fact.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    };\r\n    return Fact;\r\n}());\r\nexports.Fact = Fact;\r\nvar FactSet = /** @class */ (function (_super) {\r\n    __extends(FactSet, _super);\r\n    function FactSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.facts = [];\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FactSet.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FactSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        var hostConfig = this.hostConfig;\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n                tdElement.style.verticalAlign = \"top\";\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].value) ? \"Value\" : this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    FactSet.prototype.getJsonTypeName = function () {\r\n        return \"FactSet\";\r\n    };\r\n    FactSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        var facts = [];\r\n        for (var _i = 0, _a = this.facts; _i < _a.length; _i++) {\r\n            var fact = _a[_i];\r\n            facts.push(fact.toJSON());\r\n        }\r\n        Utils.setProperty(result, \"facts\", facts);\r\n        return result;\r\n    };\r\n    FactSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.facts = [];\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"];\r\n            this.facts = [];\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                var fact = new Fact();\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    };\r\n    FactSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        // render each fact\r\n        var speak = null;\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var speech = this.facts[i].renderSpeech();\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    };\r\n    return FactSet;\r\n}(CardElement));\r\nexports.FactSet = FactSet;\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    function Image() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.style = Enums.ImageStyle.Default;\r\n        _this.size = Enums.Size.Auto;\r\n        _this.pixelWidth = null;\r\n        _this.pixelHeight = null;\r\n        _this.altText = \"\";\r\n        return _this;\r\n    }\r\n    Image.prototype.parseDimension = function (name, value, errors) {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    var size = Utils.SizeAndUnit.parse(value);\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                    // Ignore error\r\n                }\r\n            }\r\n            raiseParseError({\r\n                error: Enums.ValidationError.InvalidPropertyValue,\r\n                message: \"Invalid image \" + name + \": \" + value\r\n            }, errors);\r\n        }\r\n        return 0;\r\n    };\r\n    Image.prototype.applySize = function (element) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Image.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Image.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = null;\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            var hostConfig = this.hostConfig;\r\n            var imageElement = document.createElement(\"img\");\r\n            imageElement.onload = function (e) {\r\n                raiseImageLoadedEvent(_this);\r\n            };\r\n            imageElement.onerror = function (e) {\r\n                var card = _this.getRootElement();\r\n                _this.renderedElement.innerHTML = \"\";\r\n                if (card && card.designMode) {\r\n                    var errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n                    _this.applySize(errorElement);\r\n                    _this.renderedElement.appendChild(errorElement);\r\n                }\r\n                raiseImageLoadedEvent(_this);\r\n            };\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0;\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n            this.applySize(imageElement);\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n            element.appendChild(imageElement);\r\n        }\r\n        return element;\r\n    };\r\n    Image.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n        return result;\r\n    };\r\n    Image.prototype.getJsonTypeName = function () {\r\n        return \"Image\";\r\n    };\r\n    Image.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    Image.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.url = json[\"url\"];\r\n        this.backgroundColor = json[\"backgroundColor\"];\r\n        var styleString = json[\"style\"];\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            }, errors);\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n            }, errors);\r\n        }\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n            }, errors);\r\n        }\r\n        var size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    };\r\n    Image.prototype.getResourceInformation = function () {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Image.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Object.defineProperty(Image.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(CardElement));\r\nexports.Image = Image;\r\nvar ImageSet = /** @class */ (function (_super) {\r\n    __extends(ImageSet, _super);\r\n    function ImageSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._images = [];\r\n        _this.imageSize = Enums.Size.Medium;\r\n        return _this;\r\n    }\r\n    ImageSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n                var renderedImage = this._images[i].render();\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    ImageSet.prototype.getItemCount = function () {\r\n        return this._images.length;\r\n    };\r\n    ImageSet.prototype.getItemAt = function (index) {\r\n        return this._images[index];\r\n    };\r\n    ImageSet.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        for (var _i = 0, _a = this._images; _i < _a.length; _i++) {\r\n            var image = _a[_i];\r\n            result = result.concat(image.getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    ImageSet.prototype.removeItem = function (item) {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n                item.setParent(null);\r\n                this.updateLayout();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ImageSet.prototype.getJsonTypeName = function () {\r\n        return \"ImageSet\";\r\n    };\r\n    ImageSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n        if (this._images.length > 0) {\r\n            var images = [];\r\n            for (var _i = 0, _a = this._images; _i < _a.length; _i++) {\r\n                var image = _a[_i];\r\n                images.push(image.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n        return result;\r\n    };\r\n    ImageSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n        if (json[\"images\"] != null) {\r\n            var jsonImages = json[\"images\"];\r\n            this._images = [];\r\n            for (var i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    };\r\n    ImageSet.prototype.addImage = function (image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    };\r\n    ImageSet.prototype.indexOf = function (cardElement) {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    };\r\n    ImageSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        var speak = null;\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    return ImageSet;\r\n}(CardElementContainer));\r\nexports.ImageSet = ImageSet;\r\nvar MediaSource = /** @class */ (function () {\r\n    function MediaSource(url, mimeType) {\r\n        if (url === void 0) { url = undefined; }\r\n        if (mimeType === void 0) { mimeType = undefined; }\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n    MediaSource.prototype.parse = function (json, errors) {\r\n        this.mimeType = json[\"mimeType\"];\r\n        this.url = json[\"url\"];\r\n    };\r\n    MediaSource.prototype.toJSON = function () {\r\n        return {\r\n            mimeType: this.mimeType,\r\n            url: this.url\r\n        };\r\n    };\r\n    return MediaSource;\r\n}());\r\nexports.MediaSource = MediaSource;\r\nvar Media = /** @class */ (function (_super) {\r\n    __extends(Media, _super);\r\n    function Media() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.sources = [];\r\n        return _this;\r\n    }\r\n    Media.prototype.getPosterUrl = function () {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    };\r\n    Media.prototype.processSources = function () {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n            var source = _a[_i];\r\n            var mimeComponents = source.mimeType.split('/');\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    var index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Media.prototype.renderPoster = function () {\r\n        var _this = this;\r\n        var playButtonArrowWidth = 12;\r\n        var playButtonArrowHeight = 15;\r\n        var posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = \"ac-media-poster\";\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n        var posterUrl = this.getPosterUrl();\r\n        if (posterUrl) {\r\n            var posterImageElement_1 = document.createElement(\"img\");\r\n            posterImageElement_1.style.width = \"100%\";\r\n            posterImageElement_1.style.height = \"100%\";\r\n            posterImageElement_1.onerror = function (e) {\r\n                posterImageElement_1.parentNode.removeChild(posterImageElement_1);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            };\r\n            posterImageElement_1.src = posterUrl;\r\n            posterRootElement.appendChild(posterImageElement_1);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            var playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = \"ac-media-playButton\";\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = function (e) {\r\n                if (_this.hostConfig.media.allowInlinePlayback) {\r\n                    var mediaPlayerElement = _this.renderMediaPlayer();\r\n                    _this.renderedElement.innerHTML = \"\";\r\n                    _this.renderedElement.appendChild(mediaPlayerElement);\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        Media.onPlay(_this);\r\n                    }\r\n                }\r\n            };\r\n            var playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = \"ac-media-playButton-arrow\";\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n            var playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n        return posterRootElement;\r\n    };\r\n    Media.prototype.renderMediaPlayer = function () {\r\n        var mediaElement;\r\n        if (this._selectedMediaType == \"video\") {\r\n            var videoPlayer = document.createElement(\"video\");\r\n            var posterUrl = this.getPosterUrl();\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n            var source = _a[_i];\r\n            var src = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n            mediaElement.appendChild(src);\r\n        }\r\n        return mediaElement;\r\n    };\r\n    Media.prototype.internalRender = function () {\r\n        var element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n        this.processSources();\r\n        element.appendChild(this.renderPoster());\r\n        return element;\r\n    };\r\n    Media.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.poster = json[\"poster\"];\r\n        this.altText = json[\"altText\"];\r\n        if (json[\"sources\"] != null) {\r\n            var jsonSources = json[\"sources\"];\r\n            this.sources = [];\r\n            for (var i = 0; i < jsonSources.length; i++) {\r\n                var source = new MediaSource();\r\n                source.parse(jsonSources[i], errors);\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    };\r\n    Media.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n        if (this.sources.length > 0) {\r\n            var serializedSources = [];\r\n            for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n                var source = _a[_i];\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n        return result;\r\n    };\r\n    Media.prototype.getJsonTypeName = function () {\r\n        return \"Media\";\r\n    };\r\n    Media.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        var posterUrl = this.getPosterUrl();\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n            var mediaSource = _a[_i];\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Media.prototype.renderSpeech = function () {\r\n        return this.altText;\r\n    };\r\n    Object.defineProperty(Media.prototype, \"selectedMediaType\", {\r\n        get: function () {\r\n            return this._selectedMediaType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Media.supportedMediaTypes = [\"audio\", \"video\"];\r\n    return Media;\r\n}(CardElement));\r\nexports.Media = Media;\r\nvar Input = /** @class */ (function (_super) {\r\n    __extends(Input, _super);\r\n    function Input() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Input.prototype.valueChanged = function () {\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n    };\r\n    Input.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement ? this.value : this.defaultValue);\r\n        return result;\r\n    };\r\n    Input.prototype.validate = function () {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Input.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    };\r\n    Input.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Input.prototype.getAllInputs = function () {\r\n        return [this];\r\n    };\r\n    Object.defineProperty(Input.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Input;\r\n}(CardElement));\r\nexports.Input = Input;\r\nvar TextInput = /** @class */ (function (_super) {\r\n    __extends(TextInput, _super);\r\n    function TextInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.style = Enums.InputTextStyle.Text;\r\n        return _this;\r\n    }\r\n    TextInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n            this._textareaElement.oninput = function () { _this.valueChanged(); };\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            this._inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n            this._inputElement.oninput = function () { _this.valueChanged(); };\r\n            return this._inputElement;\r\n        }\r\n    };\r\n    TextInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Text\";\r\n    };\r\n    TextInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n        return result;\r\n    };\r\n    TextInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.style = Utils.getEnumValueOrDefault(Enums.InputTextStyle, json[\"style\"], this.style);\r\n    };\r\n    Object.defineProperty(TextInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this.isMultiline) {\r\n                return this._textareaElement ? this._textareaElement.value : null;\r\n            }\r\n            else {\r\n                return this._inputElement ? this._inputElement.value : null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TextInput;\r\n}(Input));\r\nexports.TextInput = TextInput;\r\nvar ToggleInput = /** @class */ (function (_super) {\r\n    __extends(ToggleInput, _super);\r\n    function ToggleInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.valueOn = \"true\";\r\n        _this.valueOff = \"false\";\r\n        return _this;\r\n    }\r\n    ToggleInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n        this._checkboxInputElement.onchange = function () { _this.valueChanged(); };\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            var label = new Label();\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            var labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n        return element;\r\n    };\r\n    ToggleInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Toggle\";\r\n    };\r\n    ToggleInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        return result;\r\n    };\r\n    ToggleInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.title = json[\"title\"];\r\n        this.valueOn = Utils.getValueOrDefault(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault(json[\"valueOff\"], this.valueOff);\r\n    };\r\n    Object.defineProperty(ToggleInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this._checkboxInputElement) {\r\n                return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ToggleInput;\r\n}(Input));\r\nexports.ToggleInput = ToggleInput;\r\nvar Choice = /** @class */ (function () {\r\n    function Choice(title, value) {\r\n        if (title === void 0) { title = undefined; }\r\n        if (value === void 0) { value = undefined; }\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n    Choice.prototype.toJSON = function () {\r\n        return { title: this.title, value: this.value };\r\n    };\r\n    return Choice;\r\n}());\r\nexports.Choice = Choice;\r\nvar ChoiceSetInput = /** @class */ (function (_super) {\r\n    __extends(ChoiceSetInput, _super);\r\n    function ChoiceSetInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.choices = [];\r\n        return _this;\r\n    }\r\n    ChoiceSetInput.getUniqueCategoryName = function () {\r\n        var uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n        return uniqueCwtegoryName;\r\n    };\r\n    ChoiceSetInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\");\r\n                this._selectElement.style.width = \"100%\";\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n                Utils.appendChild(this._selectElement, option);\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n                this._selectElement.onchange = function () { _this.valueChanged(); };\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                var uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n                var element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n                element.style.width = \"100%\";\r\n                this._toggleInputs = [];\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.id = generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n                    radioInput.onchange = function () { _this.valueChanged(); };\r\n                    this._toggleInputs.push(radioInput);\r\n                    var label = new Label();\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n            var element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n            element.style.width = \"100%\";\r\n            this._toggleInputs = [];\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n                checkboxInput.onchange = function () { _this.valueChanged(); };\r\n                this._toggleInputs.push(checkboxInput);\r\n                var label = new Label();\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n            return element;\r\n        }\r\n    };\r\n    ChoiceSetInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.ChoiceSet\";\r\n    };\r\n    ChoiceSetInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        if (this.choices.length > 0) {\r\n            var choices = [];\r\n            for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\r\n                var choice = _a[_i];\r\n                choices.push(choice.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"choices\", choices);\r\n        }\r\n        if (!this.isCompact) {\r\n            Utils.setProperty(result, \"style\", \"expanded\", false);\r\n        }\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        return result;\r\n    };\r\n    ChoiceSetInput.prototype.validate = function () {\r\n        var result = [];\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }]);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ChoiceSetInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.choices = [];\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"];\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChoiceSetInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (!this.isMultiSelect) {\r\n                if (this.isCompact) {\r\n                    return this._selectElement ? this._selectElement.value : null;\r\n                }\r\n                else {\r\n                    if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                        return null;\r\n                    }\r\n                    for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                        if (this._toggleInputs[i].checked) {\r\n                            return this._toggleInputs[i].value;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n                var result = \"\";\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        if (result != \"\") {\r\n                            result += this.hostConfig.choiceSetInputValueSeparator;\r\n                        }\r\n                        result += this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n                return result == \"\" ? null : result;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChoiceSetInput.uniqueCategoryCounter = 0;\r\n    return ChoiceSetInput;\r\n}(Input));\r\nexports.ChoiceSetInput = ChoiceSetInput;\r\nvar NumberInput = /** @class */ (function (_super) {\r\n    __extends(NumberInput, _super);\r\n    function NumberInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NumberInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n        this._numberInputElement.oninput = function () { _this.valueChanged(); };\r\n        return this._numberInputElement;\r\n    };\r\n    NumberInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Number\";\r\n    };\r\n    NumberInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n        return result;\r\n    };\r\n    NumberInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    };\r\n    Object.defineProperty(NumberInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._numberInputElement ? this._numberInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NumberInput;\r\n}(Input));\r\nexports.NumberInput = NumberInput;\r\nvar DateInput = /** @class */ (function (_super) {\r\n    __extends(DateInput, _super);\r\n    function DateInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateInput.prototype.internalRender = function () {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n        return this._dateInputElement;\r\n    };\r\n    DateInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Date\";\r\n    };\r\n    Object.defineProperty(DateInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._dateInputElement ? this._dateInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateInput;\r\n}(Input));\r\nexports.DateInput = DateInput;\r\nvar TimeInput = /** @class */ (function (_super) {\r\n    __extends(TimeInput, _super);\r\n    function TimeInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeInput.prototype.internalRender = function () {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n        return this._timeInputElement;\r\n    };\r\n    TimeInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Time\";\r\n    };\r\n    Object.defineProperty(TimeInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._timeInputElement ? this._timeInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TimeInput;\r\n}(Input));\r\nexports.TimeInput = TimeInput;\r\nvar ActionButtonState;\r\n(function (ActionButtonState) {\r\n    ActionButtonState[ActionButtonState[\"Normal\"] = 0] = \"Normal\";\r\n    ActionButtonState[ActionButtonState[\"Expanded\"] = 1] = \"Expanded\";\r\n    ActionButtonState[ActionButtonState[\"Subdued\"] = 2] = \"Subdued\";\r\n})(ActionButtonState || (ActionButtonState = {}));\r\nvar ActionButton = /** @class */ (function () {\r\n    function ActionButton(action, parentContainerStyle) {\r\n        this._element = null;\r\n        this._state = ActionButtonState.Normal;\r\n        this.onClick = null;\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n    ActionButton.prototype.updateCssStyle = function () {\r\n        var hostConfig = this.action.parent.hostConfig;\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n        this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n        if (this.action.isPrimary) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"primary\"));\r\n        }\r\n    };\r\n    ActionButton.prototype.render = function (alignment) {\r\n        var _this = this;\r\n        this.action.render();\r\n        this.action.renderedElement.style.flex = alignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n        this.action.renderedElement.onclick = function (e) { _this.click(); };\r\n        this.updateCssStyle();\r\n    };\r\n    ActionButton.prototype.click = function () {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    };\r\n    Object.defineProperty(ActionButton.prototype, \"state\", {\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        set: function (value) {\r\n            this._state = value;\r\n            this.updateCssStyle();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionButton;\r\n}());\r\nvar Action = /** @class */ (function () {\r\n    function Action() {\r\n        this._parent = null;\r\n        this._actionCollection = null; // hold the reference to its action collection\r\n        this._renderedElement = null;\r\n    }\r\n    Action.prototype.setCollection = function (actionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    };\r\n    Action.prototype.addCssClasses = function (element) {\r\n        // Do nothing in base implementation\r\n    };\r\n    Action.prototype.toJSON = function () {\r\n        var result = {};\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        return result;\r\n    };\r\n    Action.prototype.render = function () {\r\n        // Cache hostConfig for perf\r\n        var hostConfig = this.parent.hostConfig;\r\n        var buttonElement = document.createElement(\"button\");\r\n        buttonElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n        this.addCssClasses(buttonElement);\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n        var hasTitle = !Utils.isNullOrEmpty(this.title);\r\n        var titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            var iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        this._renderedElement = buttonElement;\r\n    };\r\n    Action.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    Action.prototype.execute = function () {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n        raiseExecuteActionEvent(this);\r\n    };\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    Action.prototype.setStatus = function (status) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n        if (status) {\r\n            var statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    };\r\n    Action.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.prepare = function (inputs) {\r\n        // Do nothing in base implementation\r\n    };\r\n    ;\r\n    Action.prototype.parse = function (json, errors) {\r\n        raiseParseActionEvent(this, json, errors);\r\n        this.id = json[\"id\"];\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError({\r\n                error: Enums.ValidationError.PropertyCantBeNull,\r\n                message: \"Actions should always have a title.\"\r\n            }, errors);\r\n        }\r\n        this.title = json[\"title\"];\r\n        this.iconUrl = json[\"iconUrl\"];\r\n    };\r\n    Action.prototype.remove = function () {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n        return false;\r\n    };\r\n    Action.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.getResourceInformation = function () {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Action.prototype.getActionById = function (id) {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    };\r\n    Object.defineProperty(Action.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Action.prototype, \"renderedElement\", {\r\n        get: function () {\r\n            return this._renderedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Action;\r\n}());\r\nexports.Action = Action;\r\nvar SubmitAction = /** @class */ (function (_super) {\r\n    __extends(SubmitAction, _super);\r\n    function SubmitAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._isPrepared = false;\r\n        return _this;\r\n    }\r\n    SubmitAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Submit\";\r\n    };\r\n    SubmitAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n        return result;\r\n    };\r\n    SubmitAction.prototype.prepare = function (inputs) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n        this._isPrepared = true;\r\n    };\r\n    SubmitAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.data = json[\"data\"];\r\n    };\r\n    Object.defineProperty(SubmitAction.prototype, \"data\", {\r\n        get: function () {\r\n            return this._isPrepared ? this._processedData : this._originalData;\r\n        },\r\n        set: function (value) {\r\n            this._originalData = value;\r\n            this._isPrepared = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SubmitAction;\r\n}(Action));\r\nexports.SubmitAction = SubmitAction;\r\nvar OpenUrlAction = /** @class */ (function (_super) {\r\n    __extends(OpenUrlAction, _super);\r\n    function OpenUrlAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OpenUrlAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.OpenUrl\";\r\n    };\r\n    OpenUrlAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        return result;\r\n    };\r\n    OpenUrlAction.prototype.validate = function () {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    OpenUrlAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.url = json[\"url\"];\r\n    };\r\n    return OpenUrlAction;\r\n}(Action));\r\nexports.OpenUrlAction = OpenUrlAction;\r\nvar HttpHeader = /** @class */ (function () {\r\n    function HttpHeader(name, value) {\r\n        if (name === void 0) { name = \"\"; }\r\n        if (value === void 0) { value = \"\"; }\r\n        this._value = new Utils.StringWithSubstitutions();\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n    HttpHeader.prototype.toJSON = function () {\r\n        return { name: this.name, value: this._value.getOriginal() };\r\n    };\r\n    HttpHeader.prototype.prepare = function (inputs) {\r\n        this._value.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n    };\r\n    Object.defineProperty(HttpHeader.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value.get();\r\n        },\r\n        set: function (newValue) {\r\n            this._value.set(newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpHeader;\r\n}());\r\nexports.HttpHeader = HttpHeader;\r\nvar HttpAction = /** @class */ (function (_super) {\r\n    __extends(HttpAction, _super);\r\n    function HttpAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._url = new Utils.StringWithSubstitutions();\r\n        _this._body = new Utils.StringWithSubstitutions();\r\n        _this._headers = [];\r\n        return _this;\r\n    }\r\n    HttpAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Http\";\r\n    };\r\n    HttpAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        if (this._headers.length > 0) {\r\n            var headers = [];\r\n            for (var _i = 0, _a = this._headers; _i < _a.length; _i++) {\r\n                var header = _a[_i];\r\n                headers.push(header.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"headers\", headers);\r\n        }\r\n        return result;\r\n    };\r\n    HttpAction.prototype.validate = function () {\r\n        var result = [];\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    HttpAction.prototype.prepare = function (inputs) {\r\n        this._url.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n        var contentType = Utils.ContentTypes.applicationJson;\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n            if (this._headers[i].name && this._headers[i].name.toLowerCase() == \"content-type\") {\r\n                contentType = this._headers[i].value;\r\n            }\r\n        }\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n    ;\r\n    HttpAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n        this._headers = [];\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"];\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                var httpHeader = new HttpHeader();\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(HttpAction.prototype, \"url\", {\r\n        get: function () {\r\n            return this._url.get();\r\n        },\r\n        set: function (value) {\r\n            this._url.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"body\", {\r\n        get: function () {\r\n            return this._body.get();\r\n        },\r\n        set: function (value) {\r\n            this._body.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"headers\", {\r\n        get: function () {\r\n            return this._headers ? this._headers : [];\r\n        },\r\n        set: function (value) {\r\n            this._headers = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpAction;\r\n}(Action));\r\nexports.HttpAction = HttpAction;\r\nvar ShowCardAction = /** @class */ (function (_super) {\r\n    __extends(ShowCardAction, _super);\r\n    function ShowCardAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.card = new InlineAdaptiveCard();\r\n        return _this;\r\n    }\r\n    ShowCardAction.prototype.addCssClasses = function (element) {\r\n        _super.prototype.addCssClasses.call(this, element);\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    };\r\n    ShowCardAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.ShowCard\";\r\n    };\r\n    ShowCardAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n        return result;\r\n    };\r\n    ShowCardAction.prototype.validate = function () {\r\n        return this.card.validate();\r\n    };\r\n    ShowCardAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.card.parse(json[\"card\"], errors);\r\n    };\r\n    ShowCardAction.prototype.setParent = function (value) {\r\n        _super.prototype.setParent.call(this, value);\r\n        this.card.setParent(value);\r\n    };\r\n    ShowCardAction.prototype.getAllInputs = function () {\r\n        return this.card.getAllInputs();\r\n    };\r\n    ShowCardAction.prototype.getResourceInformation = function () {\r\n        return _super.prototype.getResourceInformation.call(this).concat(this.card.getResourceInformation());\r\n    };\r\n    ShowCardAction.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    return ShowCardAction;\r\n}(Action));\r\nexports.ShowCardAction = ShowCardAction;\r\nvar ActionCollection = /** @class */ (function () {\r\n    function ActionCollection(owner) {\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n        this._statusCard = null;\r\n        this._actionCard = null;\r\n        this.items = [];\r\n        this.buttons = [];\r\n        this._owner = owner;\r\n    }\r\n    ActionCollection.prototype.isActionCardContainerVisible = function () {\r\n        return this._actionCardContainer.children.length > 0;\r\n    };\r\n    ActionCollection.prototype.refreshContainer = function () {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n            return;\r\n        }\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n        var padding = this._owner.getNonZeroPadding().toSpacingDefinition(this._owner.hostConfig);\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    };\r\n    ActionCollection.prototype.layoutChanged = function () {\r\n        this._owner.getRootElement().updateLayout();\r\n    };\r\n    ActionCollection.prototype.hideActionCard = function () {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n        this.refreshContainer();\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    };\r\n    ActionCollection.prototype.showActionCard = function (action, suppressStyle, raiseEvent) {\r\n        if (suppressStyle === void 0) { suppressStyle = false; }\r\n        if (raiseEvent === void 0) { raiseEvent = true; }\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n        action.card.suppressStyle = suppressStyle;\r\n        var renderedCard = action.card.render();\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n        this.refreshContainer();\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    };\r\n    ActionCollection.prototype.collapseExpandedAction = function () {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n        this.hideActionCard();\r\n    };\r\n    ActionCollection.prototype.expandShowCardAction = function (action, raiseEvent) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n        this.showActionCard(action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()), raiseEvent);\r\n    };\r\n    ActionCollection.prototype.actionClicked = function (actionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    };\r\n    ActionCollection.prototype.getParentContainer = function () {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    };\r\n    ActionCollection.prototype.findActionButton = function (action) {\r\n        for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {\r\n            var actionButton = _a[_i];\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    ActionCollection.prototype.toJSON = function () {\r\n        if (this.items.length > 0) {\r\n            var result = [];\r\n            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\r\n                var action = _a[_i];\r\n                result.push(action.toJSON());\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ActionCollection.prototype.showStatusCard = function (status) {\r\n        status.setParent(this._owner);\r\n        this._statusCard = status.render();\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.hideStatusCard = function () {\r\n        this._statusCard = null;\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push({\r\n                error: Enums.ValidationError.TooManyActions,\r\n                message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n            });\r\n        }\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push({\r\n                error: Enums.ValidationError.InteractivityNotAllowed,\r\n                message: \"Interactivity is not allowed.\"\r\n            });\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.render = function (orientation, isDesignMode) {\r\n        var _this = this;\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n        var element = document.createElement(\"div\");\r\n        var maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        var forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            var buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var parentContainerStyle = this.getParentContainer().style;\r\n            for (var i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    var actionButton = this.findActionButton(this.items[i]);\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = function (ab) { _this.actionClicked(ab); };\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n                    actionButton.render(this._owner.hostConfig.actions.actionAlignment);\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n                    this._renderedActionCount++;\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n            var buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(this.buttons[i].action, false);\r\n                break;\r\n            }\r\n        }\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    };\r\n    ActionCollection.prototype.addAction = function (action) {\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    };\r\n    ActionCollection.prototype.removeAction = function (action) {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n        var actionIndex = this.items.indexOf(action);\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n            action.setParent(null);\r\n            invokeSetCollection(action, null);\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ActionCollection.prototype.clear = function () {\r\n        this.items = [];\r\n        this.buttons = [];\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    };\r\n    ActionCollection.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ActionCollection.prototype, \"renderedActionCount\", {\r\n        get: function () {\r\n            return this._renderedActionCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionCollection.prototype, \"expandedAction\", {\r\n        get: function () {\r\n            return this._expandedAction;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionCollection;\r\n}());\r\nvar ActionSet = /** @class */ (function (_super) {\r\n    __extends(ActionSet, _super);\r\n    function ActionSet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.orientation = null;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        return _this;\r\n    }\r\n    ActionSet.prototype.internalRender = function () {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    };\r\n    ActionSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n        return result;\r\n    };\r\n    ActionSet.prototype.isBleeding = function () {\r\n        return this._actionCollection.expandedAction ? true : false;\r\n    };\r\n    ActionSet.prototype.getJsonTypeName = function () {\r\n        return \"ActionSet\";\r\n    };\r\n    ActionSet.prototype.getActionCount = function () {\r\n        return this._actionCollection.items.length;\r\n    };\r\n    ActionSet.prototype.getActionAt = function (index) {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            _super.prototype.getActionAt.call(this, index);\r\n        }\r\n    };\r\n    ActionSet.prototype.validate = function () {\r\n        return this._actionCollection.validate();\r\n    };\r\n    ActionSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        var jsonOrientation = json[\"orientation\"];\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i], errors);\r\n                if (action) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ActionSet.prototype.addAction = function (action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    };\r\n    ActionSet.prototype.getAllInputs = function () {\r\n        return this._actionCollection.getAllInputs();\r\n    };\r\n    ActionSet.prototype.getResourceInformation = function () {\r\n        return this._actionCollection.getResourceInformation();\r\n    };\r\n    ActionSet.prototype.renderSpeech = function () {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(ActionSet.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionSet;\r\n}(CardElement));\r\nexports.ActionSet = ActionSet;\r\nvar BackgroundImage = /** @class */ (function () {\r\n    function BackgroundImage() {\r\n        this.mode = Enums.BackgroundImageMode.Stretch;\r\n        this.horizontalAlignment = Enums.HorizontalAlignment.Left;\r\n        this.verticalAlignment = Enums.VerticalAlignment.Top;\r\n    }\r\n    BackgroundImage.prototype.parse = function (json, errors) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    };\r\n    BackgroundImage.prototype.apply = function (element) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return BackgroundImage;\r\n}());\r\nexports.BackgroundImage = BackgroundImage;\r\nvar Container = /** @class */ (function (_super) {\r\n    __extends(Container, _super);\r\n    function Container() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._items = [];\r\n        _this._renderedItems = [];\r\n        _this._style = null;\r\n        _this.verticalContentAlignment = Enums.VerticalAlignment.Top;\r\n        return _this;\r\n    }\r\n    Container.prototype.isElementAllowed = function (element, forbiddenElementTypes) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Container.prototype.insertItemAt = function (item, index) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\");\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasExplicitStyle\", {\r\n        get: function () {\r\n            return this._style != null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.getItemsCollectionPropertyName = function () {\r\n        return \"items\";\r\n    };\r\n    Container.prototype.isLastElementBleeding = function () {\r\n        return this._renderedItems.length > 0 ? this._renderedItems[this._renderedItems.length - 1].isBleeding() : false;\r\n    };\r\n    Container.prototype.applyPadding = function () {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n        if (this.padding) {\r\n            var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n        }\r\n        else if (this.hasBackground) {\r\n            var physicalMargin = new SpacingDefinition();\r\n            var physicalPadding = new SpacingDefinition();\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && AdaptiveCard.useAutomaticContainerBleeding;\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin = new PaddingDefinition(effectivePadding.top, effectivePadding.right, effectivePadding.bottom, effectivePadding.left);\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Spacing.None;\r\n                    effectiveMargin.top = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Spacing.None;\r\n                    effectiveMargin.bottom = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Spacing.None;\r\n                    effectiveMargin.left = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Spacing.None;\r\n                    effectiveMargin.right = Enums.Spacing.None;\r\n                }\r\n                if (effectivePadding.left != Enums.Spacing.None || effectivePadding.right != Enums.Spacing.None) {\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Spacing.None || effectivePadding.bottom != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Spacing.None\r\n                    || effectivePadding.right != Enums.Spacing.None\r\n                    || effectivePadding.bottom != Enums.Spacing.None\r\n                    || effectivePadding.left != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = Enums.Spacing.Default;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = Enums.Spacing.Default;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, { bottom: Enums.Spacing.Default });\r\n                    }\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, { left: Enums.Spacing.Default });\r\n                    }\r\n                }\r\n                if (effectivePadding.top == Enums.Spacing.None &&\r\n                    effectivePadding.right == Enums.Spacing.None &&\r\n                    effectivePadding.bottom == Enums.Spacing.None &&\r\n                    effectivePadding.left == Enums.Spacing.None) {\r\n                    effectivePadding = new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n                }\r\n                physicalMargin = effectiveMargin.toSpacingDefinition(this.hostConfig);\r\n                physicalPadding = effectivePadding.toSpacingDefinition(this.hostConfig);\r\n            }\r\n            else {\r\n                physicalPadding = new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding).toSpacingDefinition(this.hostConfig);\r\n            }\r\n            this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n            this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n            this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    };\r\n    Container.prototype.internalRender = function () {\r\n        var _this = this;\r\n        this._renderedItems = [];\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        var hostConfig = this.hostConfig;\r\n        var element = document.createElement(\"div\");\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n        if (this.selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedElement);\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    Container.prototype.truncateOverflow = function (maxHeight) {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n        var handleElement = function (cardElement) {\r\n            var elt = cardElement.renderedElement;\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        var sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        var maxHeight_1 = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight_1);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            handleElement(item);\r\n        }\r\n        return true;\r\n    };\r\n    Container.prototype.undoOverflowTruncation = function () {\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            item['resetOverflow']();\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            var parentContainer = this.getParentContainer();\r\n            return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            return Enums.ContainerStyle.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n        if (this.backgroundImage) {\r\n            Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.url);\r\n        }\r\n        Utils.setProperty(result, \"style\", this.style, \"default\");\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n        if (this._items.length > 0) {\r\n            var elements = [];\r\n            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n                var element = _a[_i];\r\n                elements.push(element.toJSON());\r\n            }\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.isBleeding = function () {\r\n        return this.isLastElementBleeding();\r\n    };\r\n    Container.prototype.getItemCount = function () {\r\n        return this._items.length;\r\n    };\r\n    Container.prototype.getItemAt = function (index) {\r\n        return this._items[index];\r\n    };\r\n    Container.prototype.getJsonTypeName = function () {\r\n        return \"Container\";\r\n    };\r\n    Container.prototype.isFirstElement = function (element) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.isLastElement = function (element) {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._style) {\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n            if (!styleDefinition) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Unknown container style: \" + this._style\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n            }\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                });\r\n            }\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"], errors);\r\n            }\r\n        }\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n        this._style = json[\"style\"];\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            var items = json[this.getItemsCollectionPropertyName()];\r\n            this.clear();\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n                if (!element) {\r\n                    raiseParseError({\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + elementType\r\n                    }, errors);\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n                    element.parse(items[i], errors);\r\n                }\r\n            }\r\n        }\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    };\r\n    Container.prototype.addItem = function (item) {\r\n        this.insertItemAt(item, -1);\r\n    };\r\n    Container.prototype.indexOf = function (cardElement) {\r\n        return this._items.indexOf(cardElement);\r\n    };\r\n    Container.prototype.insertItemBefore = function (item, insertBefore) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore));\r\n    };\r\n    Container.prototype.insertItemAfter = function (item, insertAfter) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1);\r\n    };\r\n    Container.prototype.removeItem = function (item) {\r\n        var itemIndex = this._items.indexOf(item);\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n            item.setParent(null);\r\n            this.updateLayout();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    Container.prototype.canContentBleed = function () {\r\n        return this.hasBackground ? false : _super.prototype.canContentBleed.call(this);\r\n    };\r\n    Container.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        if (this.backgroundImage && !Utils.isNullOrEmpty(this.backgroundImage.url)) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = null;\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Container.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"style\", {\r\n        get: function () {\r\n            if (this.allowCustomStyle) {\r\n                if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                    return this._style;\r\n                }\r\n                return null;\r\n            }\r\n            else {\r\n                return this.defaultStyle;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"padding\", {\r\n        get: function () {\r\n            return this.getPadding();\r\n        },\r\n        set: function (value) {\r\n            this.setPadding(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Container;\r\n}(CardElementContainer));\r\nexports.Container = Container;\r\nvar Column = /** @class */ (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column(width) {\r\n        if (width === void 0) { width = \"auto\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this._computedWeight = 0;\r\n        _this.width = \"auto\";\r\n        _this.width = width;\r\n        return _this;\r\n    }\r\n    Column.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = \"20px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n        }\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            var sizeAndUnit = this.width;\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 \" + sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Vertical;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Column.prototype.getJsonTypeName = function () {\r\n        return \"Column\";\r\n    };\r\n    Column.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this.width instanceof SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n        return result;\r\n    };\r\n    Column.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        var jsonWidth = json[\"width\"];\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                }, errors);\r\n            }\r\n        }\r\n        var invalidWidth = false;\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth > 0) {\r\n                this.width = new Utils.SizeAndUnit(jsonWidth, Enums.SizeUnit.Weight);\r\n            }\r\n            else {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                try {\r\n                    this.width = Utils.SizeAndUnit.parse(jsonWidth);\r\n                }\r\n                catch (e) {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n            else {\r\n                this.width = jsonWidth;\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n        if (invalidWidth) {\r\n            raiseParseError({\r\n                error: Enums.ValidationError.InvalidPropertyValue,\r\n                message: \"Invalid column width: \" + jsonWidth\r\n            }, errors);\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"hasVisibleSeparator\", {\r\n        get: function () {\r\n            if (this.parent && this.parent instanceof ColumnSet) {\r\n                return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(Container));\r\nexports.Column = Column;\r\nvar ColumnSet = /** @class */ (function (_super) {\r\n    __extends(ColumnSet, _super);\r\n    function ColumnSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._columns = [];\r\n        return _this;\r\n    }\r\n    ColumnSet.prototype.applyPadding = function () {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            var hostConfig = this.hostConfig;\r\n            var element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                element.onclick = function (e) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                };\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            var totalWeight = 0;\r\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n                var column = _a[_i];\r\n                if (column.width instanceof Utils.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n            var renderedColumnCount = 0;\r\n            for (var _b = 0, _c = this._columns; _b < _c.length; _b++) {\r\n                var column = _c[_b];\r\n                if (column.width instanceof Utils.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n                var renderedColumn = column.render();\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedColumn);\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ColumnSet.prototype.truncateOverflow = function (maxHeight) {\r\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n        return true;\r\n    };\r\n    ColumnSet.prototype.undoOverflowTruncation = function () {\r\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            column['resetOverflow']();\r\n        }\r\n    };\r\n    ColumnSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n        if (this._columns.length > 0) {\r\n            var columns = [];\r\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n                var column = _a[_i];\r\n                columns.push(column.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.isFirstElement = function (element) {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ColumnSet.prototype.getCount = function () {\r\n        return this._columns.length;\r\n    };\r\n    ColumnSet.prototype.getItemCount = function () {\r\n        return this.getCount();\r\n    };\r\n    ColumnSet.prototype.getColumnAt = function (index) {\r\n        return this._columns[index];\r\n    };\r\n    ColumnSet.prototype.getItemAt = function (index) {\r\n        return this.getColumnAt(index);\r\n    };\r\n    ColumnSet.prototype.getJsonTypeName = function () {\r\n        return \"ColumnSet\";\r\n    };\r\n    ColumnSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n        if (json[\"columns\"] != null) {\r\n            var jsonColumns = json[\"columns\"];\r\n            this._columns = [];\r\n            for (var i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n                column.parse(jsonColumns[i], errors);\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.validate = function () {\r\n        var result = [];\r\n        var weightedColumns = 0;\r\n        var stretchedColumns = 0;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push({\r\n                error: Enums.ValidationError.Hint,\r\n                message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.addColumn = function (column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    };\r\n    ColumnSet.prototype.removeItem = function (item) {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n                item.setParent(null);\r\n                this.updateLayout();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ColumnSet.prototype.indexOf = function (cardElement) {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    };\r\n    ColumnSet.prototype.isLeftMostElement = function (element) {\r\n        return this._columns.indexOf(element) == 0;\r\n    };\r\n    ColumnSet.prototype.isRightMostElement = function (element) {\r\n        return this._columns.indexOf(element) == this._columns.length - 1;\r\n    };\r\n    ColumnSet.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = '';\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Object.defineProperty(ColumnSet.prototype, \"padding\", {\r\n        get: function () {\r\n            return this.getPadding();\r\n        },\r\n        set: function (value) {\r\n            this.setPadding(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSet.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSet;\r\n}(CardElementContainer));\r\nexports.ColumnSet = ColumnSet;\r\nvar Version = /** @class */ (function () {\r\n    function Version(major, minor) {\r\n        if (major === void 0) { major = 1; }\r\n        if (minor === void 0) { minor = 1; }\r\n        this._isValid = true;\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n    Version.parse = function (versionString) {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n        return result;\r\n    };\r\n    Version.prototype.toString = function () {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    };\r\n    Object.defineProperty(Version.prototype, \"major\", {\r\n        get: function () {\r\n            return this._major;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"minor\", {\r\n        get: function () {\r\n            return this._minor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this._isValid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Version;\r\n}());\r\nexports.Version = Version;\r\nfunction raiseImageLoadedEvent(image) {\r\n    var card = image.getRootElement();\r\n    var onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\nfunction raiseAnchorClickedEvent(element, anchor) {\r\n    var card = element.getRootElement();\r\n    var onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\nfunction raiseExecuteActionEvent(action) {\r\n    var card = action.parent.getRootElement();\r\n    var onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\nfunction raiseInlineCardExpandedEvent(action, isExpanded) {\r\n    var card = action.parent.getRootElement();\r\n    var onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\nfunction raiseElementVisibilityChangedEvent(element, shouldUpdateLayout) {\r\n    if (shouldUpdateLayout === void 0) { shouldUpdateLayout = true; }\r\n    var rootElement = element.getRootElement();\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n    var card = rootElement;\r\n    var onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\nfunction raiseParseElementEvent(element, json, errors) {\r\n    var card = element.getRootElement();\r\n    var onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\nfunction raiseParseActionEvent(action, json, errors) {\r\n    var card = action.parent ? action.parent.getRootElement() : null;\r\n    var onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\nfunction raiseParseError(error, errors) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\nvar ContainerWithActions = /** @class */ (function (_super) {\r\n    __extends(ContainerWithActions, _super);\r\n    function ContainerWithActions() {\r\n        var _this = _super.call(this) || this;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        return _this;\r\n    }\r\n    ContainerWithActions.prototype.internalRender = function () {\r\n        var element = _super.prototype.internalRender.call(this);\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n        if (renderedActions) {\r\n            Utils.appendChild(element, Utils.renderSeparation({\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                lineThickness: null,\r\n                lineColor: null\r\n            }, Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n        return element.children.length > 0 ? element : null;\r\n    };\r\n    ContainerWithActions.prototype.isLastElementBleeding = function () {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return _super.prototype.isLastElementBleeding.call(this) ? !this.isDesignMode() : false;\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n        return result;\r\n    };\r\n    ContainerWithActions.prototype.getActionCount = function () {\r\n        return this._actionCollection.items.length;\r\n    };\r\n    ContainerWithActions.prototype.getActionAt = function (index) {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            _super.prototype.getActionAt.call(this, index);\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.getActionById = function (id) {\r\n        var result = this._actionCollection.getActionById(id);\r\n        return result ? result : _super.prototype.getActionById.call(this, id);\r\n    };\r\n    ContainerWithActions.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this._actionCollection.clear();\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i], errors);\r\n                if (action != null) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.validate = function () {\r\n        var result = _super.prototype.validate.call(this);\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n        return result;\r\n    };\r\n    ContainerWithActions.prototype.isLastElement = function (element) {\r\n        return _super.prototype.isLastElement.call(this, element) && this._actionCollection.items.length == 0;\r\n    };\r\n    ContainerWithActions.prototype.addAction = function (action) {\r\n        if (action) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this._actionCollection.clear();\r\n    };\r\n    ContainerWithActions.prototype.getAllInputs = function () {\r\n        return _super.prototype.getAllInputs.call(this).concat(this._actionCollection.getAllInputs());\r\n    };\r\n    ContainerWithActions.prototype.getResourceInformation = function () {\r\n        return _super.prototype.getResourceInformation.call(this).concat(this._actionCollection.getResourceInformation());\r\n    };\r\n    Object.defineProperty(ContainerWithActions.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerWithActions;\r\n}(Container));\r\nexports.ContainerWithActions = ContainerWithActions;\r\nvar TypeRegistry = /** @class */ (function () {\r\n    function TypeRegistry() {\r\n        this._items = [];\r\n        this.reset();\r\n    }\r\n    TypeRegistry.prototype.findTypeRegistration = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    TypeRegistry.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    TypeRegistry.prototype.registerType = function (typeName, createInstance) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            };\r\n            this._items.push(registrationInfo);\r\n        }\r\n    };\r\n    TypeRegistry.prototype.unregisterType = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    TypeRegistry.prototype.createInstance = function (typeName) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    };\r\n    TypeRegistry.prototype.getItemCount = function () {\r\n        return this._items.length;\r\n    };\r\n    TypeRegistry.prototype.getItemAt = function (index) {\r\n        return this._items[index];\r\n    };\r\n    return TypeRegistry;\r\n}());\r\nexports.TypeRegistry = TypeRegistry;\r\nvar ElementTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ElementTypeRegistry, _super);\r\n    function ElementTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ElementTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Container\", function () { return new Container(); });\r\n        this.registerType(\"TextBlock\", function () { return new TextBlock(); });\r\n        this.registerType(\"Image\", function () { return new Image(); });\r\n        this.registerType(\"ImageSet\", function () { return new ImageSet(); });\r\n        this.registerType(\"Media\", function () { return new Media(); });\r\n        this.registerType(\"FactSet\", function () { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", function () { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", function () { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", function () { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", function () { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", function () { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", function () { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", function () { return new ToggleInput(); });\r\n    };\r\n    return ElementTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ElementTypeRegistry = ElementTypeRegistry;\r\nvar ActionTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ActionTypeRegistry, _super);\r\n    function ActionTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ActionTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Action.OpenUrl\", function () { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", function () { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", function () { return new ShowCardAction(); });\r\n    };\r\n    return ActionTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ActionTypeRegistry = ActionTypeRegistry;\r\nvar AdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(AdaptiveCard, _super);\r\n    function AdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._cardTypeName = \"AdaptiveCard\";\r\n        _this.onAnchorClicked = null;\r\n        _this.onExecuteAction = null;\r\n        _this.onElementVisibilityChanged = null;\r\n        _this.onImageLoaded = null;\r\n        _this.onInlineCardExpanded = null;\r\n        _this.onParseElement = null;\r\n        _this.onParseAction = null;\r\n        _this.version = new Version(1, 0);\r\n        _this.designMode = false;\r\n        return _this;\r\n    }\r\n    AdaptiveCard.prototype.isVersionSupported = function () {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion = !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n            return !unsupportedVersion;\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.getItemsCollectionPropertyName = function () {\r\n        return \"body\";\r\n    };\r\n    AdaptiveCard.prototype.applyPadding = function () {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n        var effectivePadding = this.padding ? this.padding.toSpacingDefinition(this.hostConfig) : this.internalPadding.toSpacingDefinition(this.hostConfig);\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.internalRender = function () {\r\n        var renderedElement = _super.prototype.internalRender.call(this);\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n        return renderedElement;\r\n    };\r\n    Object.defineProperty(AdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdaptiveCard.prototype.getJsonTypeName = function () {\r\n        return \"AdaptiveCard\";\r\n    };\r\n    AdaptiveCard.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n        return result;\r\n    };\r\n    AdaptiveCard.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push({\r\n                error: Enums.ValidationError.MissingCardType,\r\n                message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n            });\r\n        }\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push({\r\n                error: Enums.ValidationError.PropertyCantBeNull,\r\n                message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n            });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push({\r\n                error: Enums.ValidationError.UnsupportedCardVersion,\r\n                message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n            });\r\n        }\r\n        return result.concat(_super.prototype.validate.call(this));\r\n    };\r\n    AdaptiveCard.prototype.parse = function (json, errors) {\r\n        this._cardTypeName = json[\"type\"];\r\n        var langId = json[\"lang\"];\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: e.message\r\n                }, errors);\r\n            }\r\n        }\r\n        this.version = Version.parse(json[\"version\"]);\r\n        this.fallbackText = json[\"fallbackText\"];\r\n        _super.prototype.parse.call(this, json, errors);\r\n    };\r\n    AdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard;\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = _super.prototype.render.call(this);\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n            this.updateLayout();\r\n        }\r\n        return renderedCard;\r\n    };\r\n    AdaptiveCard.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.canContentBleed = function () {\r\n        return true;\r\n    };\r\n    Object.defineProperty(AdaptiveCard.prototype, \"hasVisibleSeparator\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdaptiveCard.currentVersion = new Version(1, 1);\r\n    AdaptiveCard.useAutomaticContainerBleeding = false;\r\n    AdaptiveCard.useAdvancedTextBlockTruncation = true;\r\n    AdaptiveCard.useAdvancedCardBottomTruncation = false;\r\n    AdaptiveCard.useMarkdownInRadioButtonAndCheckbox = true;\r\n    AdaptiveCard.elementTypeRegistry = new ElementTypeRegistry();\r\n    AdaptiveCard.actionTypeRegistry = new ActionTypeRegistry();\r\n    AdaptiveCard.onAnchorClicked = null;\r\n    AdaptiveCard.onExecuteAction = null;\r\n    AdaptiveCard.onElementVisibilityChanged = null;\r\n    AdaptiveCard.onImageLoaded = null;\r\n    AdaptiveCard.onInlineCardExpanded = null;\r\n    AdaptiveCard.onParseElement = null;\r\n    AdaptiveCard.onParseAction = null;\r\n    AdaptiveCard.onParseError = null;\r\n    AdaptiveCard.processMarkdown = function (text) {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n        return text;\r\n    };\r\n    return AdaptiveCard;\r\n}(ContainerWithActions));\r\nexports.AdaptiveCard = AdaptiveCard;\r\nvar InlineAdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(InlineAdaptiveCard, _super);\r\n    function InlineAdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.suppressStyle = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition(this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding, this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            if (this.suppressStyle) {\r\n                return Enums.ContainerStyle.Default;\r\n            }\r\n            else {\r\n                return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InlineAdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard = _super.prototype.render.call(this, target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n        return renderedCard;\r\n    };\r\n    InlineAdaptiveCard.prototype.getForbiddenActionTypes = function () {\r\n        return [ShowCardAction];\r\n    };\r\n    return InlineAdaptiveCard;\r\n}(AdaptiveCard));\r\nvar defaultHostConfig = new HostConfig.HostConfig({\r\n    supportsInteractivity: true,\r\n    fontFamily: \"Segoe UI\",\r\n    spacing: {\r\n        small: 10,\r\n        default: 20,\r\n        medium: 30,\r\n        large: 40,\r\n        extraLarge: 50,\r\n        padding: 20\r\n    },\r\n    separator: {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    },\r\n    fontSizes: {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    },\r\n    fontWeights: {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    },\r\n    imageSizes: {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    },\r\n    containerStyles: {\r\n        default: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        emphasis: {\r\n            backgroundColor: \"#08000000\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        maxActions: 5,\r\n        spacing: Enums.Spacing.Default,\r\n        buttonSpacing: 10,\r\n        showCard: {\r\n            actionMode: Enums.ShowCardActionMode.Inline,\r\n            inlineTopMargin: 16\r\n        },\r\n        actionsOrientation: Enums.Orientation.Horizontal,\r\n        actionAlignment: Enums.ActionAlignment.Left\r\n    },\r\n    adaptiveCard: {\r\n        allowCustomStyle: false\r\n    },\r\n    imageSet: {\r\n        imageSize: Enums.Size.Medium,\r\n        maxImageHeight: 100\r\n    },\r\n    factSet: {\r\n        title: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Bolder,\r\n            wrap: true,\r\n            maxWidth: 150,\r\n        },\r\n        value: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Default,\r\n            wrap: true,\r\n        },\r\n        spacing: 10\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractTextFormatter = /** @class */ (function () {\r\n    function AbstractTextFormatter(regularExpression) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n    AbstractTextFormatter.prototype.format = function (lang, input) {\r\n        var matches;\r\n        var result = input;\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        }\r\n        ;\r\n        return result;\r\n    };\r\n    return AbstractTextFormatter;\r\n}());\r\nvar DateFormatter = /** @class */ (function (_super) {\r\n    __extends(DateFormatter, _super);\r\n    function DateFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateFormatter.prototype.internalFormat = function (lang, matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    };\r\n    return DateFormatter;\r\n}(AbstractTextFormatter));\r\nvar TimeFormatter = /** @class */ (function (_super) {\r\n    __extends(TimeFormatter, _super);\r\n    function TimeFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeFormatter.prototype.internalFormat = function (lang, matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    };\r\n    return TimeFormatter;\r\n}(AbstractTextFormatter));\r\nfunction formatText(lang, text) {\r\n    var formatters = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n    var result = text;\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n    return result;\r\n}\r\nexports.formatText = formatText;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar indent = '    ';\r\nvar capitalize = function (name) { return name.charAt(0).toUpperCase() + name.slice(1); };\r\nvar enumeration = function (enumType) { return function (value) { return enumType + \".\" + capitalize(value); }; };\r\nvar typed = function (json, lineSeparator) {\r\n    var type = json && json.type;\r\n    var className = typeNameToClassName[type] || type;\r\n    if (className)\r\n        return assignClass(className)(json, lineSeparator);\r\n    return untyped(json, lineSeparator);\r\n};\r\nvar assignClass = function (className) { return function (json, lineSeparator) {\r\n    // if class not found, output a TypedElement to prevent data loss or crash\r\n    var _a = types[className] || TypedElement, type = _a.type, spec = __rest(_a, [\"type\"]);\r\n    if (type == primitive) {\r\n        spec = TypedElement;\r\n        json = __assign({}, json, { type: className });\r\n        className = \"TypedElement\";\r\n    }\r\n    // get specified props from json\r\n    var entries = Object.keys(spec)\r\n        .filter(function (key) { return json[key] != null; })\r\n        .map(function (key) { return \"\" + indent + capitalize(key) + \" = \" + spec[key](json[key], lineSeparator + indent) + \",\"; });\r\n    // get extension data (unspecified props)\r\n    var rest;\r\n    for (var key in json) {\r\n        if (key != 'type' && !spec[key]) {\r\n            rest = rest || {};\r\n            rest[key] = json[key];\r\n        }\r\n    }\r\n    if (rest)\r\n        entries.push(indent + \"ExtensionData = \" + dictionary(\"JToken\", untyped)(rest, lineSeparator + indent));\r\n    return [\r\n        \"new \" + className,\r\n        '{'\r\n    ].concat(entries, [\r\n        '}'\r\n    ]).join(lineSeparator);\r\n}; };\r\nvar untyped = function (json, lineSeparator) {\r\n    if (json == null || typeof json != 'object')\r\n        return primitive(json);\r\n    return [\r\n        'JToken.FromObject(new',\r\n        indent + \"{\"\r\n    ].concat(Object.keys(json)\r\n        .map(function (key) { return \"\" + indent + indent + key + \" = \" + typed(json[key], lineSeparator + indent + indent) + \",\"; }), [\r\n        indent + \"})\"\r\n    ]).join(lineSeparator);\r\n};\r\nvar primitive = function (value, lineSeparator) { return JSON.stringify(value); };\r\nvar version = function (v) { return primitive(typeof v == 'string' ? v : v.major + \".\" + v.minor); };\r\nvar list = function (className, convert) {\r\n    return function (items, lineSeparator) {\r\n        return [\r\n            \"new List<\" + className + \">\",\r\n            '{'\r\n        ].concat(items.map(function (item) { return \"\" + indent + convert(item, lineSeparator + indent) + \",\"; }), [\r\n            '}'\r\n        ]).join(lineSeparator);\r\n    };\r\n};\r\nvar dictionary = function (className, convert) {\r\n    return function (json, lineSeparator) {\r\n        if (json == null)\r\n            return \"null\";\r\n        return [\r\n            \"new Dictionary<string, \" + className + \">\",\r\n            '{'\r\n        ].concat(Object.keys(json)\r\n            .map(function (key) { return indent + \"{ \" + primitive(key) + \", \" + convert(json[key], lineSeparator + indent) + \" },\"; }), [\r\n            '}'\r\n        ]).join(lineSeparator);\r\n    };\r\n};\r\n// base classes are defined first because they are extended in types dictionary below\r\nvar TypedElement = { type: primitive };\r\nvar CardElement = {\r\n    id: primitive,\r\n    speak: primitive,\r\n    horizontalAlignment: enumeration('HorizontalAlignment'),\r\n    spacing: enumeration('Spacing'),\r\n    separator: primitive,\r\n    height: primitive,\r\n};\r\nvar Input = __assign({}, CardElement, { id: primitive, value: primitive, isRequired: primitive });\r\nvar Container = __assign({}, CardElement, { type: \"Container\", backgroundImage: untyped, style: primitive, verticalContentAlignment: enumeration('VerticalContentAlignment'), selectAction: typed, items: list('CardElement', typed) });\r\nvar ActionBase = {\r\n    id: primitive,\r\n    title: primitive,\r\n    speak: primitive,\r\n    isPrimary: primitive,\r\n    actionContext: assignClass('ActionContext'),\r\n};\r\nvar types = {\r\n    AdaptiveCard: __assign({}, CardElement, { type: \"AdaptiveCard\", id: primitive, correlationId: primitive, originator: primitive, hideOriginalBody: primitive, enableBodyToggling: primitive, rtl: primitive, expectedActors: list('string', primitive), messageCardContext: assignClass('MessageCardContext'), resources: untyped, speak: primitive, backgroundImage: untyped, version: version, minVersion: primitive, fallbackText: primitive, theme: primitive, padding: untyped, body: list('CardElement', typed), actions: list('ActionBase', typed), autoInvokeAction: typed, autoInvokeOptions: assignClass('SwiftAutoInvokeOptions'), requiredHostCapabilities: list('string', primitive), requires: dictionary('string', primitive) }),\r\n    ActionContext: {\r\n        actionButtonId: primitive,\r\n    },\r\n    MessageCardContext: {\r\n        correlationId: primitive,\r\n        messageCardSource: primitive,\r\n        oamAppName: primitive,\r\n        messageCardStampingSource: primitive,\r\n        isRefreshCard: primitive,\r\n        isInsightShown: primitive,\r\n        isBodyHidden: primitive,\r\n        insightProviderRendered: primitive,\r\n        stampingCorrelationVector: primitive,\r\n        transactionContext: primitive,\r\n    },\r\n    SwiftAutoInvokeOptions: {\r\n        showCardOnFailure: primitive\r\n    },\r\n    ActionBase: ActionBase,\r\n    CardElement: CardElement,\r\n    Container: Container,\r\n    Input: Input,\r\n    ActionSet: __assign({}, CardElement, { type: \"ActionSet\", actions: list('ActionBase', assignClass('ActionBase')) }),\r\n    DisplayAppointmentFormAction: __assign({}, ActionBase, { type: \"Action.DisplayAppointmentForm\", ItemId: primitive }),\r\n    DisplayMessageFormAction: __assign({}, ActionBase, { type: \"Action.DisplayMessageForm\", ItemId: primitive }),\r\n    HttpHeader: {\r\n        name: primitive,\r\n        value: primitive,\r\n    },\r\n    HttpAction: __assign({}, ActionBase, { type: \"Action.Http\", hideCardOnInvoke: primitive, method: primitive, url: primitive, headers: list('HttpHeader', assignClass('HttpHeader')), body: primitive, requiredHostCapabilities: list('string', primitive) }),\r\n    InvokeAddInCommandAction: __assign({}, ActionBase, { type: \"Action.InvokeAddInCommand\", AddInId: primitive, DesktopCommandId: primitive, InitializationContext: untyped }),\r\n    OpenUrlAction: __assign({}, ActionBase, { type: \"Action.OpenUrl\", url: primitive }),\r\n    ShowCardAction: __assign({}, ActionBase, { type: \"Action.ShowCard\", card: typed }),\r\n    SubmitAction: __assign({}, ActionBase, { type: \"Action.Submit\", data: untyped }),\r\n    ToggleVisibilityAction: __assign({}, ActionBase, { type: \"Action.ToggleVisibility\", targetElements: list('JToken', untyped) }),\r\n    TransactionAction: __assign({}, ActionBase, { type: \"Action.Transaction\", AddInId: primitive, InitializationContext: untyped }),\r\n    BackgroundImage: {\r\n        url: primitive,\r\n    },\r\n    TextBlock: __assign({}, CardElement, { type: \"TextBlock\", size: enumeration('TextSize'), weight: enumeration('TextWeight'), color: enumeration('TextColor'), text: primitive, isSubtle: primitive, wrap: primitive, maxLines: primitive }),\r\n    Column: __assign({}, Container, { width: primitive }),\r\n    ColumnSet: __assign({}, CardElement, { type: \"ColumnSet\", columns: list('Column', assignClass('Column')), selectAction: typed, padding: untyped }),\r\n    Fact: {\r\n        title: primitive,\r\n        value: primitive,\r\n        speak: primitive,\r\n    },\r\n    FactSet: __assign({}, CardElement, { type: \"FactSet\", facts: list('Fact', assignClass('Fact')) }),\r\n    Image: __assign({}, CardElement, { type: \"Image\", altText: primitive, selectAction: typed, size: enumeration('ImageSize'), width: primitive, height: primitive, pixelWidth: primitive, pixelHeight: primitive, style: enumeration('ImageStyle'), url: primitive, backgroundColor: primitive }),\r\n    ImageSet: __assign({}, CardElement, { type: \"ImageSet\", images: list('Image', typed), imageSize: enumeration('ImageSize'), size: enumeration('ImageSize') }),\r\n    DateInput: __assign({}, Input, { type: \"Input.Date\", min: primitive, max: primitive, placeholder: primitive }),\r\n    TimeInput: __assign({}, Input, { type: \"Input.Time\", min: primitive, max: primitive, placeholder: primitive }),\r\n    NumberInput: __assign({}, Input, { type: \"Input.Number\", min: primitive, max: primitive, placeholder: primitive }),\r\n    TextInput: __assign({}, Input, { type: \"Input.Text\", isMultiline: primitive, maxLength: primitive, placeholder: primitive, style: enumeration('TextInputStyle') }),\r\n    ToggleInput: __assign({}, Input, { type: \"Input.Toggle\", title: primitive, valueOn: primitive, valueOff: primitive }),\r\n    Choice: {\r\n        title: primitive,\r\n        value: primitive,\r\n        isSelected: primitive,\r\n        speak: primitive,\r\n    },\r\n    ChoiceSet: __assign({}, Input, { type: \"Input.ChoiceSet\", isMultiSelect: primitive, style: enumeration('ChoiceInputStyle'), placeholder: primitive, choices: list('Choice', assignClass('Choice')) }),\r\n};\r\nvar typeNameToClassName = {};\r\nfor (var className in types) {\r\n    var spec = types[className];\r\n    typeNameToClassName[spec.type || className] = className;\r\n}\r\nfunction adaptiveCardJsonToCSharp(json) {\r\n    return typed(json, '\\n');\r\n}\r\nexports.adaptiveCardJsonToCSharp = adaptiveCardJsonToCSharp;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// adaptivecards.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a94cffa130eae35c37ab","export enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum BackgroundImageMode {\r\n    Stretch,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n\r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Emphasis = \"emphasis\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums.ts","import * as Enums from \"./enums\";\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n    private static lut = [];\r\n\r\n    static generate(): string {\r\n        let d0 = Math.random() * 0xffffffff | 0;\r\n        let d1 = Math.random() * 0xffffffff | 0;\r\n        let d2 = Math.random() * 0xffffffff | 0;\r\n        let d3 = Math.random() * 0xffffffff | 0;\r\n\r\n        return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n            UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n    }\r\n\r\n    static initialize() {\r\n        for (let i = 0; i < 256; i++) {\r\n            UUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n        }\r\n    }\r\n}\r\n\r\nUUID.initialize();\r\n\r\nexport const ContentTypes = {\r\n    applicationJson : \"application/json\",\r\n    applicationXWwwFormUrlencoded : \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n    spacing: number,\r\n    lineThickness?: number,\r\n    lineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n    id: string;\r\n    value: string;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function setProperty(target: any, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue && (!defaultValue || defaultValue !== propertyValue)) {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: any, propertyName: string, propertyValue: number, defaultValue?: number) {\r\n    if (defaultValue === undefined || defaultValue !== propertyValue) {\r\n        target[propertyName] = enumType[propertyValue];\r\n    }\r\n}\r\n\r\nexport function getEnumValueOrDefault(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(separationDefinition: ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport class StringWithSubstitutions {\r\n    private _isProcessed: boolean = false;\r\n    private _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    substituteInputValues(inputs: Array<IInput>, contentType: string) {\r\n        this._processed = this._original;\r\n\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput: IInput = null;\r\n\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (matchedInput) {\r\n                var valueForReplace = \"\";\r\n\r\n                if (matchedInput.value) {\r\n                    valueForReplace = matchedInput.value;\r\n                }\r\n\r\n                if (contentType === ContentTypes.applicationJson) {\r\n                    valueForReplace = JSON.stringify(valueForReplace);\r\n                    valueForReplace = valueForReplace.slice(1, -1);\r\n                }\r\n                else if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n                    valueForReplace = encodeURIComponent(valueForReplace);\r\n                }\r\n\r\n                this._processed = this._processed.replace(matches[0], valueForReplace);\r\n            }\r\n        };\r\n\r\n        this._isProcessed = true;\r\n    }\r\n\r\n    getOriginal(): string {\r\n        return this._original;\r\n    }\r\n\r\n    get(): string {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    }\r\n\r\n    set(value: string) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    }\r\n}\r\n\r\nexport class SizeAndUnit {\r\n    physicalSize: number;\r\n    unit: Enums.SizeUnit;\r\n\r\n    static parse(input: any): SizeAndUnit {\r\n        let result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        let regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        let matches = regExp.exec(input);\r\n\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        throw new Error(\"Invalid size: \" + input);\r\n    }\r\n\r\n    constructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n                         maxHeight: number,\r\n                         lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport { TextColor } from \"./adaptivecards\";\r\n\r\nexport class TextColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Utils.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    private getTextColorDefinitionOrDefault(obj: any, defaultValue: { default: string, subtle: string }) {\r\n        return new TextColorDefinition(obj ? obj : defaultValue);\r\n    }\r\n\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors = {\r\n        default: new TextColorDefinition(),\r\n        dark: new TextColorDefinition(),\r\n        light: new TextColorDefinition(),\r\n        accent: new TextColorDefinition(),\r\n        good: new TextColorDefinition(),\r\n        warning: new TextColorDefinition(),\r\n        attention: new TextColorDefinition()\r\n    };\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            if (obj.foregroundColors) {\r\n                this.foregroundColors.default = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"default\"], { default: \"#333333\", subtle: \"#EE333333\" });\r\n                this.foregroundColors.dark = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"dark\"], { default: \"#000000\", subtle: \"#66000000\" });\r\n                this.foregroundColors.light = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"light\"], { default: \"#FFFFFF\", subtle: \"#33000000\" });\r\n                this.foregroundColors.accent = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"accent\"], { default: \"#2E89FC\", subtle: \"#882E89FC\" });\r\n                this.foregroundColors.good = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"good\"], { default: \"#54A254\", subtle: \"#DD54A254\" });\r\n                this.foregroundColors.warning = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"warning\"], { default: \"#E69500\", subtle: \"#DDE69500\" });\r\n                this.foregroundColors.attention = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"attention\"], { default: \"#CC3300\", subtle: \"#DDCC3300\" });\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n\r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n\r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly fontSizes = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n\r\n    readonly fontWeights = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = \"\";\r\n\r\n        for (let i = 0; i < classNames.length; i++) {\r\n            if (i > 0) {\r\n                result += \" \";\r\n            }\r\n\r\n            if (this.cssClassNamePrefix) {\r\n                result += this.cssClassNamePrefix + \"-\";\r\n            }\r\n\r\n            result += classNames[i];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/host-config.ts","export * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport { getEnumValueOrDefault } from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\r\nexport { adaptiveCardJsonToCSharp } from \"./adaptive-card-json-to-csharp\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/adaptivecards.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction generateUniqueId(): string {\r\n    return \"__ac-\" + Utils.UUID.generate();\r\n}\r\n\r\nexport function createActionInstance(json: any, errors: Array<IValidationError>): Action {\r\n    var actionType = json[\"type\"];\r\n\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n\r\n    if (!result) {\r\n        raiseParseError(\r\n            {\r\n                error: Enums.ValidationError.UnknownActionType,\r\n                message: \"Unknown action type: \" + actionType\r\n            },\r\n            errors\r\n        );\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport class SpacingDefinition {\r\n    left: number = 0;\r\n    top: number = 0;\r\n    right: number = 0;\r\n    bottom: number = 0;\r\n\r\n    constructor(top: number = 0,\r\n        right: number = 0,\r\n        bottom: number = 0,\r\n        left: number = 0) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n}\r\n\r\nexport class PaddingDefinition {\r\n    top: Enums.Spacing = Enums.Spacing.None;\r\n    right: Enums.Spacing = Enums.Spacing.None;\r\n    bottom: Enums.Spacing = Enums.Spacing.None;\r\n    left: Enums.Spacing = Enums.Spacing.None;\r\n\r\n    constructor(top: Enums.Spacing = Enums.Spacing.None,\r\n        right: Enums.Spacing = Enums.Spacing.None,\r\n        bottom: Enums.Spacing = Enums.Spacing.None,\r\n        left: Enums.Spacing = Enums.Spacing.None) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n\r\n    toSpacingDefinition(hostConfig: HostConfig.HostConfig): SpacingDefinition {\r\n        return new SpacingDefinition(\r\n            hostConfig.getEffectiveSpacing(this.top),\r\n            hostConfig.getEffectiveSpacing(this.right),\r\n            hostConfig.getEffectiveSpacing(this.bottom),\r\n            hostConfig.getEffectiveSpacing(this.left));\r\n    }\r\n}\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class SizeAndUnit {\r\n    physicalSize: number;\r\n    unit: Enums.SizeUnit;\r\n\r\n    static parse(input: any): SizeAndUnit {\r\n        let result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        let regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        let matches = regExp.exec(input);\r\n\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        throw new Error(\"Invalid size: \" + input);\r\n    }\r\n\r\n    constructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n}\r\n\r\nexport interface IResourceInformation {\r\n    url: string;\r\n    mimeType: string;\r\n}\r\n\r\nexport abstract class CardElement {\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _internalPadding: PaddingDefinition = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        return Utils.renderSeparation(\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this._isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this._isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this._isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this._isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this._isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected internalGetNonZeroPadding(padding: PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (processTop) {\r\n            if (padding.top == Enums.Spacing.None) {\r\n                padding.top = this.internalPadding.top;\r\n            }\r\n        }\r\n\r\n        if (processRight) {\r\n            if (padding.right == Enums.Spacing.None) {\r\n                padding.right = this.internalPadding.right;\r\n            }\r\n        }\r\n\r\n        if (processBottom) {\r\n            if (padding.bottom == Enums.Spacing.None) {\r\n                padding.bottom = this.internalPadding.bottom;\r\n            }\r\n        }\r\n\r\n        if (processLeft) {\r\n            if (padding.left == Enums.Spacing.None) {\r\n                padding.left = this.internalPadding.left;\r\n            }\r\n        }\r\n\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(\r\n                padding,\r\n                processTop && this.isAtTheVeryTop(),\r\n                processRight && this.isAtTheVeryRight(),\r\n                processBottom && this.isAtTheVeryBottom(),\r\n                processLeft && this.isAtTheVeryLeft());\r\n        }\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition();\r\n    }\r\n\r\n    protected get internalPadding(): PaddingDefinition {\r\n        if (this._padding) {\r\n            return this._padding;\r\n        }\r\n        else {\r\n            return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n        }\r\n    }\r\n\r\n    protected set internalPadding(value: PaddingDefinition) {\r\n        this._internalPadding = value;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected getPadding(): PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: PaddingDefinition) {\r\n        this._padding = value;\r\n\r\n        if (this._padding) {\r\n            AdaptiveCard.useAutomaticContainerBleeding = false;\r\n        }\r\n    }\r\n\r\n    id: string;\r\n    speak: string;\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    height: \"auto\" | \"stretch\" = \"auto\";\r\n    customCssSelector: string = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n    abstract renderSpeech(): string;\r\n\r\n    toJSON() {\r\n        let result = {};\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getNonZeroPadding(): PaddingDefinition {\r\n        var padding: PaddingDefinition = new PaddingDefinition();\r\n\r\n        this.internalGetNonZeroPadding(padding);\r\n\r\n        return padding;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n\r\n        var jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        var jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        var parentContainer = this.getParentContainer();\r\n\r\n        if (parentContainer) {\r\n            return this.separatorElement && !parentContainer.isFirstElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n}\r\n\r\nexport class TextBlock extends CardElement {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _text: string;\r\n    private _processedText: string = null;\r\n    private _selectAction: Action = null;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            var element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    this.selectAction.execute();\r\n\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                var formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                this._processedText = this.useMarkdown ? AdaptiveCard.processMarkdown(formattedText) : formattedText;\r\n            }\r\n\r\n            element.innerHTML = this._processedText;\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(this.hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        if (this.hostConfig.fontFamily) {\r\n            targetElement.style.fontFamily = this.hostConfig.fontFamily;\r\n        }\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = \"left\";\r\n                break;\r\n        }\r\n\r\n        var cssStyle = \"text \";\r\n        var fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = this.hostConfig.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = this.hostConfig.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = this.hostConfig.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = this.hostConfig.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        if (this.hostConfig.lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n\r\n        var parentContainer = this.getParentContainer();\r\n        var styleDefinition = this.hostConfig.containerStyles.getStyleByName(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default, this.hostConfig.containerStyles.default);\r\n\r\n        var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n        var colorDefinition: HostConfig.TextColorDefinition;\r\n\r\n        switch (actualTextColor) {\r\n            case Enums.TextColor.Accent:\r\n                colorDefinition = styleDefinition.foregroundColors.accent;\r\n                break;\r\n            case Enums.TextColor.Dark:\r\n                colorDefinition = styleDefinition.foregroundColors.dark;\r\n                break;\r\n            case Enums.TextColor.Light:\r\n                colorDefinition = styleDefinition.foregroundColors.light;\r\n                break;\r\n            case Enums.TextColor.Good:\r\n                colorDefinition = styleDefinition.foregroundColors.good;\r\n                break;\r\n            case Enums.TextColor.Warning:\r\n                colorDefinition = styleDefinition.foregroundColors.warning;\r\n                break;\r\n            case Enums.TextColor.Attention:\r\n                colorDefinition = styleDefinition.foregroundColors.attention;\r\n                break;\r\n            default:\r\n                colorDefinition = styleDefinition.foregroundColors.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        var fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = this.hostConfig.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = this.hostConfig.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = this.hostConfig.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = json[\"text\"];\r\n\r\n        var sizeString = json[\"size\"];\r\n\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        var weightString = json[\"weight\"];\r\n\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n\r\n        return null;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (this._text != value) {\r\n            this._text = value;\r\n\r\n            this._processedText = null;\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    forElementId: string;\r\n}\r\n\r\nexport class Fact {\r\n    name: string;\r\n    value: string;\r\n    speak: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.name, value: this.value };\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].value) ? \"Value\" : this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let facts = []\r\n\r\n        for (let fact of this.facts) {\r\n            facts.push(fact.toJSON());\r\n        }\r\n\r\n        Utils.setProperty(result, \"facts\", facts);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"] as Array<any>;\r\n\r\n            this.facts = [];\r\n\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                let fact = new Fact();\r\n\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        // render each fact\r\n        let speak = null;\r\n\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                let speech = this.facts[i].renderSpeech();\r\n\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Utils.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) { // enter or space pressed\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Utils.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = json[\"url\"];\r\n        this.backgroundColor = json[\"backgroundColor\"];\r\n\r\n        var styleString = json[\"style\"];\r\n\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [ { url: this.url, mimeType: \"image\" } ]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        for (let image of this._images) {\r\n            result = result.concat(image.getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        var speak = null;\r\n\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n}\r\n\r\nexport class MediaSource {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        this.mimeType = json[\"mimeType\"];\r\n        this.url = json[\"url\"];\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            mimeType: this.mimeType,\r\n            url: this.url\r\n        }\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n\r\n \t\tfor (let source of this.sources) {\r\n            let mimeComponents = source.mimeType.split('/');\r\n\r\n \t\t\tif (mimeComponents.length == 2) {\r\n\t\t\t\tif (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n\r\n \t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tthis._selectedMediaType = Media.supportedMediaTypes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n \t\t\t\tif (mimeComponents[0] == this._selectedMediaType) {\r\n\t\t\t\t\tthis._selectedSources.push(source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = \"ac-media-poster\";\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = \"ac-media-playButton\";\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n\r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = \"ac-media-playButton-arrow\";\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n\r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.poster = json[\"poster\"];\r\n        this.altText = json[\"altText\"];\r\n\r\n        if (json[\"sources\"] != null) {\r\n            let jsonSources = json[\"sources\"] as Array<any>;\r\n\r\n            this.sources = [];\r\n\r\n            for (let i = 0; i < jsonSources.length; i++) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSources[i], errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        return this.altText;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Utils.IInput {\r\n    protected valueChanged() {\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    title: string;\r\n    defaultValue: string;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement ? this.value : this.defaultValue);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _textareaElement: HTMLTextAreaElement;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            this._textareaElement.oninput = () => { this.valueChanged(); }\r\n\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            this._inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            this._inputElement.oninput = () => { this.valueChanged(); }\r\n\r\n            return this._inputElement;\r\n        }\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.style = Utils.getEnumValueOrDefault(Enums.InputTextStyle, json[\"style\"], this.style);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.isMultiline) {\r\n            return this._textareaElement ? this._textareaElement.value : null;\r\n        }\r\n        else {\r\n            return this._inputElement ? this._inputElement.value : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            var label = new Label();\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n            var labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = json[\"title\"];\r\n\r\n        this.valueOn = Utils.getValueOrDefault<string>(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault<string>(json[\"valueOff\"], this.valueOff);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.title, value: this.value };\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n\r\n        ChoiceSetInput.uniqueCategoryCounter ++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => { this.valueChanged(); }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                var element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.id = generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    var label = new Label();\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            var element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                var label = new Label();\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean;\r\n    isMultiSelect: boolean;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        if (this.choices.length > 0) {\r\n            var choices = [];\r\n\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"choices\", choices);\r\n        }\r\n\r\n        if (!this.isCompact) {\r\n            Utils.setProperty(result, \"style\", \"expanded\", false);\r\n        }\r\n\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }])\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n\r\n        this.choices = [];\r\n\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"] as Array<any>;\r\n\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                return this._selectElement ? this._selectElement.value : null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    min: string;\r\n    max: string;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _action: Action;\r\n    private _element: HTMLButtonElement = null;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n        this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (this.action.isPrimary) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"primary\"));\r\n        }\r\n\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    render(alignment: Enums.ActionAlignment) {\r\n        this.action.render();\r\n        this.action.renderedElement.style.flex = alignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n        this.action.renderedElement.onclick = (e) => { this.click(); };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action {\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    id: string;\r\n    title: string;\r\n    iconUrl: string;\r\n    isPrimary: boolean;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    toJSON() {\r\n        let result = {};\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        var buttonElement = document.createElement(\"button\");\r\n        buttonElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    setStatus(status: any) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n\r\n        if (status) {\r\n            let statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        // Do nothing in base implementation\r\n    };\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        raiseParseActionEvent(this, json, errors);\r\n\r\n        this.id = json[\"id\"];\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = json[\"title\"];\r\n        this.iconUrl = json[\"iconUrl\"];\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [ { url: this.iconUrl, mimeType: \"image\" } ]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Submit\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.OpenUrl\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = json[\"url\"];\r\n    }\r\n}\r\n\r\nexport class HttpHeader {\r\n    private _value = new Utils.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    toJSON() {\r\n        return { name: this.name, value: this._value.getOriginal() };\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._value.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    private _url = new Utils.StringWithSubstitutions();\r\n    private _body = new Utils.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Http\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n\r\n        if (this._headers.length > 0) {\r\n            let headers = [];\r\n\r\n            for (let header of this._headers) {\r\n                headers.push(header.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"headers\", headers);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._url.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Utils.ContentTypes.applicationJson;\r\n\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n\r\n            if (this._headers[i].name && this._headers[i].name.toLowerCase() == \"content-type\") {\r\n                contentType = this._headers[i].value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n\r\n        this._headers = [];\r\n\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                let httpHeader = new HttpHeader();\r\n\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.ShowCard\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this.card.validate();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.card.parse(json[\"card\"], errors);\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _statusCard: HTMLElement = null;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private isActionCardContainerVisible(): boolean {\r\n        return this._actionCardContainer.children.length > 0;\r\n    }\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        var padding = this._owner.getNonZeroPadding().toSpacingDefinition(this._owner.hostConfig);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    showStatusCard(status: AdaptiveCard) {\r\n        status.setParent(this._owner);\r\n\r\n        this._statusCard = status.render();\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    hideStatusCard() {\r\n        this._statusCard = null;\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().style;\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    actionButton.render(this._owner.hostConfig.actions.actionAlignment);\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\")\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return this._actionCollection.expandedAction ? true : false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this._actionCollection.validate();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                let action = createActionInstance(jsonActions[i], errors);\r\n\r\n                if (action) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage {\r\n    url: string;\r\n    mode: Enums.BackgroundImageMode = Enums.BackgroundImageMode.Stretch;\r\n    horizontalAlignment: Enums.HorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    verticalAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Container extends CardElementContainer {\r\n    private _selectAction: Action;\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n    private _style?: string = null;\r\n\r\n    private isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private insertItemAt(item: CardElement, index: number) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    private get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected isLastElementBleeding(): boolean {\r\n        return this._renderedItems.length > 0 ? this._renderedItems[this._renderedItems.length - 1].isBleeding() : false;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        if (this.padding) {\r\n            var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n        }\r\n        else if (this.hasBackground) {\r\n            var physicalMargin: SpacingDefinition = new SpacingDefinition();\r\n            var physicalPadding: SpacingDefinition = new SpacingDefinition();\r\n\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && AdaptiveCard.useAutomaticContainerBleeding;\r\n\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin: PaddingDefinition = new PaddingDefinition(\r\n                    effectivePadding.top,\r\n                    effectivePadding.right,\r\n                    effectivePadding.bottom,\r\n                    effectivePadding.left);\r\n\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Spacing.None;\r\n                    effectiveMargin.top = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Spacing.None;\r\n                    effectiveMargin.bottom = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Spacing.None;\r\n                    effectiveMargin.left = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Spacing.None;\r\n                    effectiveMargin.right = Enums.Spacing.None;\r\n                }\r\n\r\n                if (effectivePadding.left != Enums.Spacing.None || effectivePadding.right != Enums.Spacing.None) {\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Spacing.None || effectivePadding.bottom != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Spacing.None\r\n                    || effectivePadding.right != Enums.Spacing.None\r\n                    || effectivePadding.bottom != Enums.Spacing.None\r\n                    || effectivePadding.left != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = Enums.Spacing.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = Enums.Spacing.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign(\r\n                            {},\r\n                            effectivePadding,\r\n                            { bottom: Enums.Spacing.Default }\r\n                        );\r\n                    }\r\n\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign(\r\n                            {},\r\n                            effectivePadding,\r\n                            { left: Enums.Spacing.Default }\r\n                        );\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top == Enums.Spacing.None &&\r\n                    effectivePadding.right == Enums.Spacing.None &&\r\n                    effectivePadding.bottom == Enums.Spacing.None &&\r\n                    effectivePadding.left == Enums.Spacing.None) {\r\n                    effectivePadding = new PaddingDefinition(\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding);\r\n                }\r\n\r\n                physicalMargin = effectiveMargin.toSpacingDefinition(this.hostConfig);\r\n                physicalPadding = effectivePadding.toSpacingDefinition(this.hostConfig);\r\n            }\r\n            else {\r\n                physicalPadding = new PaddingDefinition(\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding\r\n                ).toSpacingDefinition(this.hostConfig);\r\n            }\r\n\r\n            this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n            this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n            this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n\r\n            let styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\r\n\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n\r\n        if (this.selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction != null) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        var parentContainer = this.getParentContainer();\r\n\r\n        return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    backgroundImage: BackgroundImage;\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        if (this.backgroundImage) {\r\n            Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.url);\r\n        }\r\n\r\n        Utils.setProperty(result, \"style\", this.style, \"default\");\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return this.isLastElementBleeding();\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._style) {\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"], errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        this._style = json[\"style\"];\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            var items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n\r\n                if (!element) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.UnknownElementType,\r\n                            message: \"Unknown element type: \" + elementType\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n\r\n                    element.parse(items[i], errors);\r\n                }\r\n            }\r\n        }\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore));\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.hasBackground ? false : super.canContentBleed();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item: CardElement = this._items[i];\r\n\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        if (this.backgroundImage && !Utils.isNullOrEmpty(this.backgroundImage.url)) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = null;\r\n\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        this.applyPadding();\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n\r\n            return null;\r\n        }\r\n        else {\r\n            return this.defaultStyle;\r\n        }\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n\r\n    get padding(): PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Utils.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = \"20px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 \" + sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"auto\";\r\n\r\n    constructor(width: ColumnWidth = \"auto\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        var invalidWidth = false;\r\n\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth > 0) {\r\n                this.width = new Utils.SizeAndUnit(jsonWidth, Enums.SizeUnit.Weight);\r\n            }\r\n            else {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                try {\r\n                    this.width = Utils.SizeAndUnit.parse(jsonWidth);\r\n                }\r\n                catch (e) {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n            else {\r\n                this.width = jsonWidth;\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n\r\n        if (invalidWidth) {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid column width: \" + jsonWidth\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends CardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _selectAction: Action;\r\n\r\n    protected applyPadding() {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            var element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n\r\n                element.onclick = (e) => {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            var totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Utils.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            var renderedColumnCount: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Utils.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                var renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n\r\n                column.parse(jsonColumns[i], errors);\r\n\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n        var weightedColumns: number = 0;\r\n        var stretchedColumns: number = 0;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        this.applyPadding();\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = '';\r\n\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    get padding(): PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n\r\n    constructor(major: number = 1, minor: number = 1) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n\r\n    static parse(versionString: string): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: IValidationError, errors: Array<IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        return element.children.length > 0 ? element : null;\r\n    }\r\n\r\n    protected isLastElementBleeding(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isLastElementBleeding() ? !this.isDesignMode() : false;\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.clear();\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i], errors);\r\n\r\n                if (action != null) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result = super.validate();\r\n\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (action) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Action.OpenUrl\", () => { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", () => { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", () => { return new ShowCardAction(); });\r\n    }\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: Version = new Version(1, 1);\r\n\r\n    static useAutomaticContainerBleeding: boolean = false;\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<IValidationError>) => void = null;\r\n    static onParseError: (error: IValidationError) => void = null;\r\n\r\n    static processMarkdown = function (text: string): string {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion: boolean =\r\n                !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        var effectivePadding = this.padding ? this.padding.toSpacingDefinition(this.hostConfig) : this.internalPadding.toSpacingDefinition(this.hostConfig);\r\n\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<IValidationError>) => void = null;\r\n\r\n    version?: Version = new Version(1, 0);\r\n    fallbackText: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n\r\n        return result.concat(super.validate());\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        this._cardTypeName = json[\"type\"];\r\n\r\n        var langId = json[\"lang\"];\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = Version.parse(json[\"version\"]);\r\n\r\n        this.fallbackText = json[\"fallbackText\"];\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        var renderedCard: HTMLElement;\r\n\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        fontFamily: \"Segoe UI\",\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontSizes: {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        },\r\n        fontWeights: {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/card-elements.ts","abstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/text-formatters.ts","type Converter = (value:any, lineSeparator?:string) => string;\r\nconst indent = '    ';\r\nlet capitalize = (name:string):string => name.charAt(0).toUpperCase() + name.slice(1);\r\nlet enumeration = (enumType:string):Converter => (value:string) => `${enumType}.${capitalize(value)}`;\r\nlet typed:Converter = (json:{type:string}, lineSeparator:string) => {\r\n\tlet type = json && json.type;\r\n\tlet className = typeNameToClassName[type] || type;\r\n\tif (className)\r\n\t\treturn assignClass(className)(json, lineSeparator);\r\n\treturn untyped(json, lineSeparator);\r\n}\r\nlet assignClass = (className:keyof typeof types):Converter => (json:object, lineSeparator:string):string => {\r\n    // if class not found, output a TypedElement to prevent data loss or crash\r\n    let {type, ...spec} = types[className] || TypedElement;\r\n\tif (type == primitive)\r\n\t{\r\n\t\tspec = TypedElement;\r\n\t\tjson = {...json, type: className};\r\n\t\tclassName = \"TypedElement\";\r\n\t}\r\n    \r\n    // get specified props from json\r\n    let entries = Object.keys(spec)\r\n        .filter(key => json[key] != null)\r\n        .map(key => `${indent}${capitalize(key)} = ${spec[key](json[key], lineSeparator + indent)},`);\r\n\r\n    // get extension data (unspecified props)\r\n    let rest;\r\n    for (let key in json)\r\n    {\r\n        if (key != 'type' && !spec[key])\r\n        {\r\n            rest = rest || {};\r\n            rest[key] = json[key];\r\n        }\r\n    }\r\n    if (rest)\r\n        entries.push(`${indent}ExtensionData = ${dictionary(\"JToken\", untyped)(rest, lineSeparator + indent)}`);\r\n\r\n    return [\r\n        `new ${className}`,\r\n        '{',\r\n        ...entries,\r\n        '}'\r\n    ].join(lineSeparator);\r\n};\r\nlet untyped:Converter = (json:object, lineSeparator:string) => {\r\n    if (json == null || typeof json != 'object')\r\n        return primitive(json);\r\n    \r\n    return [\r\n        'JToken.FromObject(new',\r\n        `${indent}{`,\r\n        ...Object.keys(json)\r\n            .map(key => `${indent}${indent}${key} = ${typed(json[key], lineSeparator + indent + indent)},`),\r\n        `${indent}})`\r\n    ].join(lineSeparator);\r\n};\r\nlet primitive:Converter = (value:any, lineSeparator?:string) => JSON.stringify(value);\r\nlet version:Converter = (v: {major:number, minor:number} | string) => primitive(typeof v == 'string' ? v : `${v.major}.${v.minor}`);\r\nlet list = (className:string, convert:Converter):Converter =>\r\n    (items:any[], lineSeparator:string) =>\r\n        [\r\n            `new List<${className}>`,\r\n            '{',\r\n            ...items.map(item => `${indent}${convert(item, lineSeparator + indent)},`),\r\n            '}'\r\n        ].join(lineSeparator);\r\nlet dictionary = (className:string, convert:Converter):Converter =>\r\n    (json:object, lineSeparator:string) => {\r\n        if (json == null)\r\n            return \"null\";\r\n        return [\r\n            `new Dictionary<string, ${className}>`,\r\n            '{',\r\n            ...Object.keys(json)\r\n                .map(key => `${indent}\\{ ${primitive(key)}, ${convert(json[key], lineSeparator + indent)} \\},`),\r\n            '}'\r\n        ].join(lineSeparator);\r\n    };\r\n\r\ntype Spec = { type?:string } & { [key:string]:Converter };\r\ntype SpecShim = { [key:string]:Converter|string };\r\n// base classes are defined first because they are extended in types dictionary below\r\nlet TypedElement = {type: primitive};\r\nlet CardElement = {\r\n    id: primitive,\r\n    speak: primitive,\r\n    horizontalAlignment: enumeration('HorizontalAlignment'),\r\n    spacing: enumeration('Spacing'),\r\n    separator: primitive,\r\n    height: primitive,\r\n};\r\nlet Input = {\r\n    ...CardElement,\r\n    id: primitive,\r\n    value: primitive,\r\n    isRequired: primitive,\r\n};\r\nlet Container = {\r\n    ...CardElement,\r\n    type: \"Container\",\r\n    backgroundImage: untyped,\r\n    style: primitive,\r\n    verticalContentAlignment: enumeration('VerticalContentAlignment'),\r\n    selectAction: typed,\r\n    items: list('CardElement', typed),\r\n};\r\nlet ActionBase = {\r\n    id: primitive,\r\n    title: primitive,\r\n    speak: primitive,\r\n    isPrimary: primitive,\r\n    actionContext: assignClass('ActionContext'),\r\n};\r\nlet types:{[className:string]:Spec} = {\r\n    AdaptiveCard: {\r\n        ...CardElement,\r\n        type: \"AdaptiveCard\",\r\n        id: primitive,\r\n        correlationId: primitive,\r\n        originator: primitive,\r\n        hideOriginalBody: primitive,\r\n        enableBodyToggling: primitive,\r\n        rtl: primitive,\r\n        expectedActors: list('string', primitive),\r\n        messageCardContext: assignClass('MessageCardContext'),\r\n        resources: untyped,\r\n        speak: primitive,\r\n        backgroundImage: untyped,\r\n        version: version,\r\n        minVersion: primitive,\r\n        fallbackText: primitive,\r\n        theme: primitive,\r\n        padding: untyped,\r\n        body: list('CardElement', typed),\r\n        actions: list('ActionBase', typed),\r\n        autoInvokeAction: typed,\r\n        autoInvokeOptions: assignClass('SwiftAutoInvokeOptions'),\r\n        requiredHostCapabilities: list('string', primitive),\r\n        requires: dictionary('string', primitive),\r\n    },\r\n    ActionContext: {\r\n        actionButtonId: primitive,\r\n    },\r\n    MessageCardContext: {\r\n        correlationId: primitive,\r\n        messageCardSource: primitive,\r\n        oamAppName: primitive,\r\n        messageCardStampingSource: primitive,\r\n        isRefreshCard: primitive,\r\n        isInsightShown: primitive,\r\n        isBodyHidden: primitive,\r\n        insightProviderRendered: primitive,\r\n        stampingCorrelationVector: primitive,\r\n        transactionContext: primitive,\r\n    },\r\n    SwiftAutoInvokeOptions: {\r\n        showCardOnFailure: primitive\r\n    },\r\n    ActionBase,\r\n    CardElement,\r\n    Container,\r\n    Input,\r\n    ActionSet: {\r\n        ...CardElement,\r\n\t\ttype: \"ActionSet\",\r\n        actions: list('ActionBase', assignClass('ActionBase'))\r\n    },\r\n    DisplayAppointmentFormAction: {\r\n        ...ActionBase,\r\n        type: \"Action.DisplayAppointmentForm\",\r\n        ItemId: primitive,\r\n    },\r\n    DisplayMessageFormAction: {\r\n        ...ActionBase,\r\n        type: \"Action.DisplayMessageForm\",\r\n        ItemId: primitive,\r\n    },\r\n    HttpHeader: {\r\n        name: primitive,\r\n        value: primitive,\r\n    },\r\n    HttpAction: {\r\n        ...ActionBase,\r\n        type: \"Action.Http\",\r\n        hideCardOnInvoke: primitive,\r\n        method: primitive,\r\n        url: primitive,\r\n        headers: list('HttpHeader', assignClass('HttpHeader')),\r\n        body: primitive,\r\n        requiredHostCapabilities: list('string', primitive),\r\n    },\r\n    InvokeAddInCommandAction: {\r\n        ...ActionBase,\r\n        type: \"Action.InvokeAddInCommand\",\r\n        AddInId: primitive,\r\n        DesktopCommandId: primitive,\r\n        InitializationContext: untyped,\r\n    },\r\n    OpenUrlAction: {\r\n        ...ActionBase,\r\n        type: \"Action.OpenUrl\",\r\n        url: primitive,\r\n    },\r\n    ShowCardAction: {\r\n        ...ActionBase,\r\n        type: \"Action.ShowCard\",\r\n        card: typed,\r\n    },\r\n    SubmitAction: {\r\n        ...ActionBase,\r\n        type: \"Action.Submit\",\r\n        data: untyped,\r\n    },\r\n    ToggleVisibilityAction: {\r\n        ...ActionBase,\r\n        type: \"Action.ToggleVisibility\",\r\n        targetElements: list('JToken', untyped),\r\n    },\r\n    TransactionAction: {\r\n        ...ActionBase,\r\n        type: \"Action.Transaction\",\r\n        AddInId: primitive,\r\n        InitializationContext: untyped,\r\n    },\r\n    BackgroundImage: {\r\n        url: primitive,\r\n    },\r\n    TextBlock: {\r\n        ...CardElement,\r\n        type: \"TextBlock\",\r\n        size: enumeration('TextSize'),\r\n        weight: enumeration('TextWeight'),\r\n        color: enumeration('TextColor'),\r\n        text: primitive,\r\n        isSubtle: primitive,\r\n        wrap: primitive,\r\n        maxLines: primitive,\r\n    },\r\n    Column: {\r\n        ...Container,\r\n        width: primitive,\r\n    },\r\n    ColumnSet: {\r\n        ...CardElement,\r\n        type: \"ColumnSet\",\r\n        columns: list('Column', assignClass('Column')),\r\n        selectAction: typed,\r\n        padding: untyped,\r\n    },\r\n    Fact: {\r\n        title: primitive,\r\n        value: primitive,\r\n        speak: primitive,\r\n    },\r\n    FactSet: {\r\n        ...CardElement,\r\n        type: \"FactSet\",\r\n        facts: list('Fact', assignClass('Fact')),\r\n    },\r\n    Image: {\r\n        ...CardElement,\r\n        type: \"Image\",\r\n        altText: primitive,\r\n        selectAction: typed,\r\n        size: enumeration('ImageSize'),\r\n        width: primitive,\r\n        height: primitive,\r\n        pixelWidth: primitive,\r\n        pixelHeight: primitive,\r\n        style: enumeration('ImageStyle'),\r\n        url: primitive,\r\n        backgroundColor: primitive,\r\n    },\r\n    ImageSet: {\r\n        ...CardElement,\r\n        type: \"ImageSet\",\r\n        images: list('Image', typed),\r\n        imageSize: enumeration('ImageSize'),\r\n        size: enumeration('ImageSize'), // needed?\r\n    },\r\n    DateInput: {\r\n        ...Input,\r\n        type: \"Input.Date\",\r\n        min: primitive,\r\n        max: primitive,\r\n        placeholder: primitive,\r\n    },\r\n    TimeInput: {\r\n        ...Input,\r\n        type: \"Input.Time\",\r\n        min: primitive,\r\n        max: primitive,\r\n        placeholder: primitive,\r\n    },\r\n    NumberInput: {\r\n        ...Input,\r\n        type: \"Input.Number\",\r\n        min: primitive,\r\n        max: primitive,\r\n        placeholder: primitive,\r\n    },\r\n    TextInput: {\r\n        ...Input,\r\n        type: \"Input.Text\",\r\n        isMultiline: primitive,\r\n        maxLength: primitive,\r\n        placeholder: primitive,\r\n        style: enumeration('TextInputStyle'),\r\n    },\r\n    ToggleInput: {\r\n        ...Input,\r\n        type: \"Input.Toggle\",\r\n        title: primitive,\r\n        valueOn: primitive,\r\n        valueOff: primitive,\r\n    },\r\n    Choice: {\r\n        title: primitive,\r\n        value: primitive,\r\n        isSelected: primitive,\r\n        speak: primitive,\r\n    },\r\n    ChoiceSet: {\r\n        ...Input,\r\n        type: \"Input.ChoiceSet\",\r\n        isMultiSelect: primitive,\r\n        style: enumeration('ChoiceInputStyle'),\r\n        placeholder: primitive,\r\n        choices: list('Choice', assignClass('Choice'))\r\n    },\r\n} as {[key:string]:SpecShim} as {[key:string]:Spec};\r\nlet typeNameToClassName = {};\r\nfor (let className in types)\r\n{\r\n    let spec = types[className];\r\n    typeNameToClassName[spec.type || className] = className;\r\n}\r\n\r\nexport function adaptiveCardJsonToCSharp(json:any)\r\n{\r\n    return typed(json, '\\n');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/adaptive-card-json-to-csharp.ts"],"sourceRoot":""}